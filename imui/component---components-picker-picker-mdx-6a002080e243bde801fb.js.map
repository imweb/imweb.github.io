{"version":3,"sources":["webpack:///../components/picker/Picker.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Picker","__position","__code","__scope","Button","Playground","Props","Example","state","visibleBasic","mockOptions","bind","count","Math","random","re","i","push","id","selected","render","onClick","setState","visible","this","maxSelected","detail","data","onClose","onSave","console","log","onChange","React","visibleNest","display","style","color","search","visibleSelected","visibleMaxSelected","selectedIdList","preselectedIdList","visibleAsync","visibleAsyncSearch","visibleAsyncLoadmore","dataAsyncSearch","dataAsync","dataAsyncLoadmore","loadingAsyncLoadmore","onAsnycSearch","onAsnycLoadmore","componentDidMount","timer","window","setTimeout","componentWillUnmount","clearTimeout","searchKeyword","loadingAsyncSearch","concat","onSearch","loading","onNeedMoreData","visibleWarning","warning","isMDXComponent"],"mappings":"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","file":"component---components-picker-picker-mdx-6a002080e243bde801fb.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/shijisun/edu/projects/imui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Picker from './index';\nimport Button from '../button/index';\nimport './style/index.scss';\nimport { Playground, Props } from 'docz';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"picker\"\n    }}>{`Picker`}</h1>\n\n    <h2 {...{\n      \"id\": \"props--methods\"\n    }}>{`Props & Methods`}</h2>\n    <Props of={Picker} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        visibleBasic: false,\\n      }\\n      this.mockOptions = this.mockOptions.bind(this)\\n    }\\n    mockOptions(count, name) {\\n      if (!name) {\\n        name = Math.random()\\n      }\\n      let re = []\\n      for (let i = 0; i < count; i++) {\\n        re.push({ id: `${i}-${name}`, selected: false })\\n      }\\n      return re\\n    }\\n    render() {\\n      return (\\n        <>\\n          <Button onClick={() => this.setState({ visibleBasic: true })}>\\n            Click me to pick\\n          </Button>\\n          <Picker\\n            visible={this.state.visibleBasic}\\n            name=\\\"课程包\\\"\\n            maxSelected={5}\\n            detail=\\\"支持选择最多关联5门课程（包）\\\"\\n            data={this.mockOptions(40)}\\n            onClose={() => this.setState({ visibleBasic: false })}\\n            onSave={data => {\\n              console.log(\\'selected:\\', data)\\n            }}\\n            onChange={data => {\\n              console.log(data)\\n            }}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Picker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              visibleBasic: false\n            };\n            this.mockOptions = this.mockOptions.bind(this);\n          }\n\n          mockOptions(count, name) {\n            if (!name) {\n              name = Math.random();\n            }\n\n            let re = [];\n\n            for (let i = 0; i < count; i++) {\n              re.push({\n                id: `${i}-${name}`,\n                selected: false\n              });\n            }\n\n            return re;\n          }\n\n          render() {\n            return <>\n            <Button onClick={() => this.setState({\n                visibleBasic: true\n              })} mdxType=\"Button\">Click me to pick</Button>\n            <Picker visible={this.state.visibleBasic} name=\"课程包\" maxSelected={5} detail=\"支持选择最多关联5门课程（包）\" data={this.mockOptions(40)} onClose={() => this.setState({\n                visibleBasic: false\n              })} onSave={data => {\n                console.log('selected:', data);\n              }} onChange={data => {\n                console.log(data);\n              }} mdxType=\"Picker\" />\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"nested-data\"\n    }}>{`Nested Data`}</h2>\n    <Playground __position={2} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        visibleNest: false,\\n      }\\n    }\\n    render() {\\n      return (\\n        <>\\n          <Button onClick={() => this.setState({ visibleNest: true })}>\\n            Nested\\n          </Button>\\n          <Picker\\n            visible={this.state.visibleNest}\\n            name=\\\"嵌套课程包\\\"\\n            data={[\\n              {\\n                id: 1,\\n                display: <strong style={{ color: \\'red\\' }}>红</strong>,\\n                search: \\'红\\',\\n              },\\n              {\\n                id: 2,\\n                display: <strong style={{ color: \\'blue\\' }}>蓝</strong>,\\n                search: \\'蓝色\\',\\n              },\\n              {\\n                id: 3,\\n                display: <strong style={{ color: \\'green\\' }}>绿</strong>,\\n                search: \\'绿色\\',\\n              },\\n            ]}\\n            onClose={() => this.setState({ visibleNest: false })}\\n            onSave={() => this.setState({ visibleNest: false })}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Picker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              visibleNest: false\n            };\n          }\n\n          render() {\n            return <>\n            <Button onClick={() => this.setState({\n                visibleNest: true\n              })} mdxType=\"Button\">Nested</Button>\n            <Picker visible={this.state.visibleNest} name=\"嵌套课程包\" data={[{\n                id: 1,\n                display: <strong style={{\n                  color: 'red'\n                }}>红</strong>,\n                search: '红'\n              }, {\n                id: 2,\n                display: <strong style={{\n                  color: 'blue'\n                }}>蓝</strong>,\n                search: '蓝色'\n              }, {\n                id: 3,\n                display: <strong style={{\n                  color: 'green'\n                }}>绿</strong>,\n                search: '绿色'\n              }]} onClose={() => this.setState({\n                visibleNest: false\n              })} onSave={() => this.setState({\n                visibleNest: false\n              })} mdxType=\"Picker\" />\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"selected-settings\"\n    }}>{`Selected Settings`}</h2>\n    <Playground __position={3} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        visibleSelected: false,\\n        visibleMaxSelected: false,\\n      }\\n    }\\n    render() {\\n      return (\\n        <>\\n          <Button onClick={() => this.setState({ visibleSelected: true })}>\\n            Select one by default\\n          </Button>\\n          <Picker\\n            visible={this.state.visibleSelected}\\n            name=\\\"设置选中课程包\\\"\\n            data={[\\n              {\\n                id: 1,\\n                display: \\'Option 1\\',\\n                name: \\'1\\',\\n              },\\n              {\\n                id: 2,\\n                display: \\'Option 2\\',\\n                name: \\'2\\',\\n              },\\n              {\\n                id: 3,\\n                display: \\'Option 3\\',\\n                name: \\'3\\',\\n              },\\n            ]}\\n            selectedIdList={[1]}\\n            preselectedIdList={[2]}\\n            maxSelected={3}\\n            onClose={() => this.setState({ visibleSelected: false })}\\n            onSave={() => this.setState({ visibleSelected: false })}\\n          />\\n          <Button onClick={() => this.setState({ visibleMaxSelected: true })}>\\n            Set max selected\\n          </Button>\\n          <Picker\\n            visible={this.state.visibleMaxSelected}\\n            name=\\\"最多选中数课程包\\\"\\n            maxSelected={1}\\n            data={[\\n              {\\n                id: 1,\\n                display: \\'Option 1\\',\\n                name: \\'1\\',\\n              },\\n              {\\n                id: 2,\\n                display: \\'Option 2\\',\\n                name: \\'2\\',\\n              },\\n              {\\n                id: 3,\\n                display: \\'Option 3\\',\\n                name: \\'3\\',\\n              },\\n            ]}\\n            onClose={() => this.setState({ visibleMaxSelected: false })}\\n            onSave={() => this.setState({ visibleMaxSelected: false })}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Picker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              visibleSelected: false,\n              visibleMaxSelected: false\n            };\n          }\n\n          render() {\n            return <>\n            <Button onClick={() => this.setState({\n                visibleSelected: true\n              })} mdxType=\"Button\">Select one by default</Button>\n            <Picker visible={this.state.visibleSelected} name=\"设置选中课程包\" data={[{\n                id: 1,\n                display: 'Option 1',\n                name: '1'\n              }, {\n                id: 2,\n                display: 'Option 2',\n                name: '2'\n              }, {\n                id: 3,\n                display: 'Option 3',\n                name: '3'\n              }]} selectedIdList={[1]} preselectedIdList={[2]} maxSelected={3} onClose={() => this.setState({\n                visibleSelected: false\n              })} onSave={() => this.setState({\n                visibleSelected: false\n              })} mdxType=\"Picker\" />\n            <Button onClick={() => this.setState({\n                visibleMaxSelected: true\n              })} mdxType=\"Button\">Set max selected</Button>\n            <Picker visible={this.state.visibleMaxSelected} name=\"最多选中数课程包\" maxSelected={1} data={[{\n                id: 1,\n                display: 'Option 1',\n                name: '1'\n              }, {\n                id: 2,\n                display: 'Option 2',\n                name: '2'\n              }, {\n                id: 3,\n                display: 'Option 3',\n                name: '3'\n              }]} onClose={() => this.setState({\n                visibleMaxSelected: false\n              })} onSave={() => this.setState({\n                visibleMaxSelected: false\n              })} mdxType=\"Picker\" />\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"async\"\n    }}>{`Async`}</h2>\n    <Playground __position={4} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        visibleAsync: false,\\n        visibleAsyncSearch: false,\\n        visibleAsyncLoadmore: false,\\n        dataAsyncSearch: null,\\n        dataAsync: null,\\n        dataAsyncLoadmore: null,\\n        loadingAsyncLoadmore: false,\\n      }\\n      this.onAsnycSearch = this.onAsnycSearch.bind(this)\\n      this.onAsnycLoadmore = this.onAsnycLoadmore.bind(this)\\n      this.mockOptions = this.mockOptions.bind(this)\\n    }\\n    componentDidMount() {\\n      this.timer = window.setTimeout(() => {\\n        this.setState({\\n          dataAsync: this.mockOptions(40),\\n          dataAsyncSearch: this.mockOptions(40),\\n          dataAsyncLoadmore: this.mockOptions(40),\\n        })\\n      }, 5000)\\n    }\\n    componentWillUnmount() {\\n      window.clearTimeout(this.timer)\\n    }\\n    onAsnycSearch(searchKeyword, data) {\\n      this.setState({\\n        loadingAsyncSearch: true,\\n      })\\n      this.timer = window.setTimeout(() => {\\n        this.setState({\\n          dataAsyncSearch: data.concat(this.mockOptions(10, searchKeyword)),\\n          loadingAsyncSearch: false,\\n        })\\n      }, 1000)\\n    }\\n    onAsnycLoadmore(searchKeyword, data) {\\n      this.setState({\\n        loadingAsyncLoadmore: true,\\n      })\\n      this.timer = window.setTimeout(() => {\\n        if (data != null) {\\n          this.setState({\\n            dataAsyncLoadmore: data.concat(\\n              this.mockOptions(10, searchKeyword),\\n            ),\\n            loadingAsyncLoadmore: false,\\n          })\\n        }\\n      }, 1000)\\n    }\\n    mockOptions(count, name) {\\n      if (!name) {\\n        name = Math.random()\\n      }\\n      let re = []\\n      for (let i = 0; i < count; i++) {\\n        re.push({ id: `${i}-${name}`, selected: false })\\n      }\\n      return re\\n    }\\n    render() {\\n      return (\\n        <>\\n          <Button onClick={() => this.setState({ visibleAsync: true })}>\\n            Async Data\\n          </Button>\\n          <Picker\\n            visible={this.state.visibleAsync}\\n            name=\\\"异步课程包\\\"\\n            data={this.dataAsync}\\n            onClose={() => this.setState({ visibleAsync: false })}\\n            onSave={() => this.setState({ visibleAsync: false })}\\n          />\\n          <Button onClick={() => this.setState({ visibleAsyncSearch: true })}>\\n            Async Search\\n          </Button>\\n          <Picker\\n            visible={this.state.visibleAsyncSearch}\\n            name=\\\"异步搜索\\\"\\n            maxSelected={3}\\n            data={this.state.dataAsyncSearch}\\n            onClose={() => this.setState({ visibleAsyncSearch: false })}\\n            onSave={() => this.setState({ visibleAsyncSearch: false })}\\n            onSearch={this.onAsnycSearch}\\n            loading={this.loadingAsyncSearch}\\n          />\\n          <Button\\n            onClick={() => this.setState({ visibleAsyncLoadmore: true })}\\n          >\\n            Async Load More\\n          </Button>\\n          <Picker\\n            visible={this.state.visibleAsyncLoadmore}\\n            name=\\\"异步加载更多\\\"\\n            maxSelected={3}\\n            data={this.state.dataAsyncLoadmore}\\n            onClose={() => this.setState({ visibleAsyncLoadmore: false })}\\n            onSave={() => this.setState({ visibleAsyncLoadmore: false })}\\n            onNeedMoreData={this.onAsnycLoadmore}\\n            loading={this.state.loadingAsyncLoadmore}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Picker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              visibleAsync: false,\n              visibleAsyncSearch: false,\n              visibleAsyncLoadmore: false,\n              dataAsyncSearch: null,\n              dataAsync: null,\n              dataAsyncLoadmore: null,\n              loadingAsyncLoadmore: false\n            };\n            this.onAsnycSearch = this.onAsnycSearch.bind(this);\n            this.onAsnycLoadmore = this.onAsnycLoadmore.bind(this);\n            this.mockOptions = this.mockOptions.bind(this);\n          }\n\n          componentDidMount() {\n            this.timer = window.setTimeout(() => {\n              this.setState({\n                dataAsync: this.mockOptions(40),\n                dataAsyncSearch: this.mockOptions(40),\n                dataAsyncLoadmore: this.mockOptions(40)\n              });\n            }, 5000);\n          }\n\n          componentWillUnmount() {\n            window.clearTimeout(this.timer);\n          }\n\n          onAsnycSearch(searchKeyword, data) {\n            this.setState({\n              loadingAsyncSearch: true\n            });\n            this.timer = window.setTimeout(() => {\n              this.setState({\n                dataAsyncSearch: data.concat(this.mockOptions(10, searchKeyword)),\n                loadingAsyncSearch: false\n              });\n            }, 1000);\n          }\n\n          onAsnycLoadmore(searchKeyword, data) {\n            this.setState({\n              loadingAsyncLoadmore: true\n            });\n            this.timer = window.setTimeout(() => {\n              if (data != null) {\n                this.setState({\n                  dataAsyncLoadmore: data.concat(this.mockOptions(10, searchKeyword)),\n                  loadingAsyncLoadmore: false\n                });\n              }\n            }, 1000);\n          }\n\n          mockOptions(count, name) {\n            if (!name) {\n              name = Math.random();\n            }\n\n            let re = [];\n\n            for (let i = 0; i < count; i++) {\n              re.push({\n                id: `${i}-${name}`,\n                selected: false\n              });\n            }\n\n            return re;\n          }\n\n          render() {\n            return <>\n            <Button onClick={() => this.setState({\n                visibleAsync: true\n              })} mdxType=\"Button\">Async Data</Button>\n            <Picker visible={this.state.visibleAsync} name=\"异步课程包\" data={this.dataAsync} onClose={() => this.setState({\n                visibleAsync: false\n              })} onSave={() => this.setState({\n                visibleAsync: false\n              })} mdxType=\"Picker\" />\n            <Button onClick={() => this.setState({\n                visibleAsyncSearch: true\n              })} mdxType=\"Button\">Async Search</Button>\n            <Picker visible={this.state.visibleAsyncSearch} name=\"异步搜索\" maxSelected={3} data={this.state.dataAsyncSearch} onClose={() => this.setState({\n                visibleAsyncSearch: false\n              })} onSave={() => this.setState({\n                visibleAsyncSearch: false\n              })} onSearch={this.onAsnycSearch} loading={this.loadingAsyncSearch} mdxType=\"Picker\" />\n            <Button onClick={() => this.setState({\n                visibleAsyncLoadmore: true\n              })} mdxType=\"Button\">Async Load More</Button>\n            <Picker visible={this.state.visibleAsyncLoadmore} name=\"异步加载更多\" maxSelected={3} data={this.state.dataAsyncLoadmore} onClose={() => this.setState({\n                visibleAsyncLoadmore: false\n              })} onSave={() => this.setState({\n                visibleAsyncLoadmore: false\n              })} onNeedMoreData={this.onAsnycLoadmore} loading={this.state.loadingAsyncLoadmore} mdxType=\"Picker\" />\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"warning-message\"\n    }}>{`Warning Message`}</h2>\n    <Playground __position={5} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        visibleWarning: false,\\n        warning: \\'\\',\\n      }\\n    }\\n    render() {\\n      return (\\n        <>\\n          <Button\\n            onClick={() =>\\n              this.setState({\\n                warning: `${this.state.warning}警告信息`,\\n                visibleWarning: true,\\n              })\\n            }\\n          >\\n            Set Warning Message\\n          </Button>\\n          <Picker\\n            visible={this.state.visibleWarning}\\n            name=\\\"动态设置警告信息\\\"\\n            maxSelected={3}\\n            data={[\\n              {\\n                id: 1,\\n                display: \\'Option 1\\',\\n                name: \\'1\\',\\n              },\\n              {\\n                id: 2,\\n                display: \\'Option 2\\',\\n                name: \\'2\\',\\n              },\\n              {\\n                id: 3,\\n                display: \\'Option 3\\',\\n                name: \\'3\\',\\n              },\\n            ]}\\n            warning={this.state.warning}\\n            onClose={() => this.setState({ visibleWarning: false })}\\n            onSave={() => this.setState({ visibleWarning: false })}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Picker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              visibleWarning: false,\n              warning: ''\n            };\n          }\n\n          render() {\n            return <>\n            <Button onClick={() => this.setState({\n                warning: `${this.state.warning}警告信息`,\n                visibleWarning: true\n              })} mdxType=\"Button\">Set Warning Message</Button>\n            <Picker visible={this.state.visibleWarning} name=\"动态设置警告信息\" maxSelected={3} data={[{\n                id: 1,\n                display: 'Option 1',\n                name: '1'\n              }, {\n                id: 2,\n                display: 'Option 2',\n                name: '2'\n              }, {\n                id: 3,\n                display: 'Option 3',\n                name: '3'\n              }]} warning={this.state.warning} onClose={() => this.setState({\n                visibleWarning: false\n              })} onSave={() => this.setState({\n                visibleWarning: false\n              })} mdxType=\"Picker\" />\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}