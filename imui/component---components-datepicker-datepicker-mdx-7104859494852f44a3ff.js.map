{"version":3,"sources":["webpack:///../components/datepicker/Datepicker.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Datepicker","__position","__code","__scope","Button","Playground","Props","placeholder","style","height","inputWidth","value","Date","inline","initMonth","minDate","maxDate","dateFormat","showIcon","display","width","mode","rangeJoin","highLightDates","now","onlyEnableHighLightDate","Example","state","logArr","handleSelect","bind","renderLogs","newDate","oldDate","logs","this","setState","map","log","index","key","render","onChange","React","handleMonthChange","onChangeMonth","isMDXComponent"],"mappings":"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","file":"component---components-datepicker-datepicker-mdx-7104859494852f44a3ff.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/shijisun/edu/projects/imui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Datepicker from './index';\nimport Button from '../button/index';\nimport { Playground, Props } from 'docz';\nimport './style/index.scss';\nimport './style/v2.scss';\nimport '../style/docz-reset.scss';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"datepicker\"\n    }}>{`Datepicker`}</h1>\n\n    <h2 {...{\n      \"id\": \"props--methods\"\n    }}>{`Props & Methods`}</h2>\n    <Props of={Datepicker} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <Playground __position={1} __code={'<Datepicker />'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Datepicker mdxType=\"Datepicker\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"placeholder\"\n    }}>{`Placeholder`}</h2>\n    <Playground __position={2} __code={'<Datepicker placeholder={\\'Click to pick\\'} />'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Datepicker placeholder={'Click to pick'} mdxType=\"Datepicker\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"set-input-width\"\n    }}>{`Set Input Width`}</h2>\n    <Playground __position={3} __code={'<Datepicker placeholder={\\'Short one\\'} />\\n<div style={{ height: \\'10px\\' }}></div>\\n<Datepicker placeholder={\\'Long one\\'} inputWidth={240} />\\n<div style={{ height: \\'10px\\' }}></div>\\n<Datepicker placeholder={\\'Longer one\\'} inputWidth={300} />'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Datepicker placeholder={'Short one'} mdxType=\"Datepicker\" />\n    <div style={{\n        height: '10px'\n      }}></div>\n    <Datepicker placeholder={'Long one'} inputWidth={240} mdxType=\"Datepicker\" />\n    <div style={{\n        height: '10px'\n      }}></div>\n    <Datepicker placeholder={'Longer one'} inputWidth={300} mdxType=\"Datepicker\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"value\"\n    }}>{`Value`}</h2>\n    <Playground __position={4} __code={'<Datepicker value={new Date()} />'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Datepicker value={new Date()} mdxType=\"Datepicker\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"inline\"\n    }}>{`Inline`}</h2>\n    <Playground __position={5} __code={'<Datepicker inline />'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Datepicker inline mdxType=\"Datepicker\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"preset-month\"\n    }}>{`Preset Month`}</h2>\n    <Playground __position={6} __code={'<Datepicker\\n  placeholder={\\'Use initMonth to preset the month\\'}\\n  initMonth={new Date(2019, 5, 20)}\\n  inputWidth={350}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Datepicker placeholder={'Use initMonth to preset the month'} initMonth={new Date(2019, 5, 20)} inputWidth={350} mdxType=\"Datepicker\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"limit-range\"\n    }}>{`Limit Range`}</h2>\n    <Playground __position={7} __code={'<Datepicker\\n  placeholder={\\'Use minDate and maxDate to limit the available range\\'}\\n  inputWidth={480}\\n  initMonth={new Date(2016, 5, 6)}\\n  minDate={new Date(2016, 5, 5)}\\n  maxDate={new Date(2016, 5, 25)}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Datepicker placeholder={'Use minDate and maxDate to limit the available range'} inputWidth={480} initMonth={new Date(2016, 5, 6)} minDate={new Date(2016, 5, 5)} maxDate={new Date(2016, 5, 25)} mdxType=\"Datepicker\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"format-date\"\n    }}>{`Format Date`}</h2>\n    <Playground __position={8} __code={'<Datepicker\\n  value={new Date()}\\n  inputWidth={240}\\n  dateFormat={\\'YYYY年MM月DD日\\'}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Datepicker value={new Date()} inputWidth={240} dateFormat={'YYYY年MM月DD日'} mdxType=\"Datepicker\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"icon\"\n    }}>{`Icon`}</h2>\n    <Playground __position={9} __code={'<Datepicker placeholder={\\'With Icon\\'} inputWidth={240} showIcon />\\n<span style={{ display: \\'inline-block\\', width: \\'50px\\' }}></span>\\n<Datepicker placeholder={\\'Without Icon\\'} inputWidth={240} showIcon={false} />'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Datepicker placeholder={'With Icon'} inputWidth={240} showIcon mdxType=\"Datepicker\" />\n    <span style={{\n        display: 'inline-block',\n        width: '50px'\n      }}></span>\n    <Datepicker placeholder={'Without Icon'} inputWidth={240} showIcon={false} mdxType=\"Datepicker\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"mode\"\n    }}>{`Mode`}</h2>\n    <Playground __position={10} __code={'<Datepicker placeholder={\\'Date mode\\'} inputWidth={240} mode=\\\"date\\\" />\\n<span style={{ display: \\'inline-block\\', width: \\'50px\\' }}></span>\\n<Datepicker\\n  placeholder={\\'Week mode\\'}\\n  inputWidth={240}\\n  mode=\\\"week\\\"\\n  rangeJoin={\\' 至 \\'}\\n/>\\n<span style={{ display: \\'inline-block\\', width: \\'50px\\' }}></span>\\n<Datepicker\\n  placeholder={\\'Range mode\\'}\\n  inputWidth={240}\\n  mode=\\\"range\\\"\\n  rangeJoin={\\' 至 \\'}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Datepicker placeholder={'Date mode'} inputWidth={240} mode=\"date\" mdxType=\"Datepicker\" />\n    <span style={{\n        display: 'inline-block',\n        width: '50px'\n      }}></span>\n    <Datepicker placeholder={'Week mode'} inputWidth={240} mode=\"week\" rangeJoin={' 至 '} mdxType=\"Datepicker\" />\n    <span style={{\n        display: 'inline-block',\n        width: '50px'\n      }}></span>\n    <Datepicker placeholder={'Range mode'} inputWidth={240} mode=\"range\" rangeJoin={' 至 '} mdxType=\"Datepicker\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"highlight-dates\"\n    }}>{`Highlight Dates`}</h2>\n    <Playground __position={11} __code={'<Datepicker\\n  inline\\n  highLightDates={[Date.now(), Date.now() - 24 * 60 * 60 * 1000]}\\n  onlyEnableHighLightDate\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Datepicker inline highLightDates={[Date.now(), Date.now() - 24 * 60 * 60 * 1000]} onlyEnableHighLightDate mdxType=\"Datepicker\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"onchange\"\n    }}>{`onChange`}</h2>\n    <Playground __position={12} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        logArr: [],\\n      }\\n      this.handleSelect = this.handleSelect.bind(this)\\n      this.renderLogs = this.renderLogs.bind(this)\\n    }\\n    handleSelect(newDate, oldDate) {\\n      const logs = [`New Date: ${newDate}`, `Old Date: ${oldDate}`]\\n      this.setState({\\n        logArr: logs,\\n      })\\n    }\\n    renderLogs(logArr) {\\n      return logArr.map((log, index) => {\\n        return <p key={index}>{log}</p>\\n      })\\n    }\\n    render() {\\n      return (\\n        <>\\n          {this.renderLogs(this.state.logArr)}\\n          <Datepicker\\n            placeholder={\\'Pick a date\\'}\\n            onChange={this.handleSelect}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              logArr: []\n            };\n            this.handleSelect = this.handleSelect.bind(this);\n            this.renderLogs = this.renderLogs.bind(this);\n          }\n\n          handleSelect(newDate, oldDate) {\n            const logs = [`New Date: ${newDate}`, `Old Date: ${oldDate}`];\n            this.setState({\n              logArr: logs\n            });\n          }\n\n          renderLogs(logArr) {\n            return logArr.map((log, index) => {\n              return <p key={index}>\n                {log}\n                </p>;\n            });\n          }\n\n          render() {\n            return <>\n                {this.renderLogs(this.state.logArr)}\n                <Datepicker placeholder={'Pick a date'} onChange={this.handleSelect} mdxType=\"Datepicker\" />\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"onchangemonth\"\n    }}>{`onChangeMonth`}</h2>\n    <Playground __position={13} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        logArr: [],\\n      }\\n      this.handleMonthChange = this.handleMonthChange.bind(this)\\n      this.renderLogs = this.renderLogs.bind(this)\\n    }\\n    handleMonthChange(newDate, oldDate) {\\n      const logs = [`New Month: ${newDate}`, `Old Month: ${oldDate}`]\\n      this.setState({\\n        logArr: logs,\\n      })\\n    }\\n    renderLogs(logArr) {\\n      return logArr.map((log, index) => {\\n        return <p key={index}>{log}</p>\\n      })\\n    }\\n    render() {\\n      return (\\n        <>\\n          {this.renderLogs(this.state.logArr)}\\n          <Datepicker\\n            placeholder={\\'Change the month\\'}\\n            onChangeMonth={this.handleMonthChange}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Datepicker,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              logArr: []\n            };\n            this.handleMonthChange = this.handleMonthChange.bind(this);\n            this.renderLogs = this.renderLogs.bind(this);\n          }\n\n          handleMonthChange(newDate, oldDate) {\n            const logs = [`New Month: ${newDate}`, `Old Month: ${oldDate}`];\n            this.setState({\n              logArr: logs\n            });\n          }\n\n          renderLogs(logArr) {\n            return logArr.map((log, index) => {\n              return <p key={index}>\n                {log}\n                </p>;\n            });\n          }\n\n          render() {\n            return <>\n                {this.renderLogs(this.state.logArr)}\n                <Datepicker placeholder={'Change the month'} onChangeMonth={this.handleMonthChange} mdxType=\"Datepicker\" />\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}