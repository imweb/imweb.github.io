{"version":3,"sources":["webpack:///../components/form/Form.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Form","FormRow","Label","__position","__code","__scope","Button","Radio","RadioGroup","Input","CheckGroup","Checkbox","Datepicker","Validator","Dropdown","Playground","Props","options","label","id","required","help","value","inline","horizontal","style","width","Example","state","disabled","onValid","bind","onInValid","checkers","same","val","callback","isValid","password","getValue","msg","this","setState","render","data-required","data-patterns","key","type","ref","instance","limit","min","max","marginLeft","React","parentName","values","getFormValues","setFormValues","editingValues","refs","myForm","getValues","JSON","stringify","parse","setValues","checkOpts","checked","onClick","placeholder","onChange","display","marginTop","isMDXComponent"],"mappings":"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","file":"component---components-form-form-mdx-dea4dc8a005ce99ca4ac.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/shijisun/edu/projects/imui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Form, FormRow, Label } from './index';\nimport Button from '../button/index';\nimport { Radio, RadioGroup } from '../radio/index';\nimport Input from '../input/index';\nimport { CheckGroup } from '../checkbox/index';\nimport Checkbox from '../checkbox/index';\nimport Datepicker from '../datepicker/index';\nimport Validator from '../validator/index';\nimport Dropdown from '../dropdown/index';\nimport { Playground, Props } from 'docz';\nimport './style/index.scss';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"form\"\n    }}>{`Form`}</h1>\n\n    <h2 {...{\n      \"id\": \"props--methods\"\n    }}>{`Props & Methods`}</h2>\n    <h3 {...{\n      \"id\": \"form-1\"\n    }}>{`Form`}</h3>\n    <Props of={Form} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"formrow\"\n    }}>{`FormRow`}</h3>\n    <Props of={FormRow} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"label\"\n    }}>{`Label`}</h3>\n    <Props of={Label} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <Playground __position={3} __code={'() => {\\n  const options = [\\n    {\\n      label: \\'班级通收费\\',\\n      id: 0,\\n    },\\n    {\\n      label: \\'班级1\\',\\n      id: 1,\\n    },\\n    {\\n      label: \\'班级2\\',\\n      id: 2,\\n    },\\n  ]\\n  return (\\n    <Form>\\n      <FormRow>\\n        <Label required help=\\\"//ke.qq.com\\\">\\n          课程名称\\n        </Label>\\n        <Input />\\n      </FormRow>\\n      <FormRow>\\n        <Label required help=\\\"//ke.qq.com\\\">\\n          是否收费\\n        </Label>\\n        <RadioGroup>\\n          <Radio value={0}>免费</Radio>\\n          <Radio value={1}>付费</Radio>\\n        </RadioGroup>\\n      </FormRow>\\n      <FormRow>\\n        <Label required help=\\\"//ke.qq.com\\\">\\n          上架IOS\\n        </Label>\\n        <RadioGroup inline={false}>\\n          <Radio value={0}>是</Radio>\\n          <Radio value={1}>否</Radio>\\n        </RadioGroup>\\n      </FormRow>\\n      <FormRow>\\n        <Label required help=\\\"//ke.qq.com\\\">\\n          收费\\n        </Label>\\n        <CheckGroup options={options} />\\n      </FormRow>\\n      <FormRow>\\n        <Label required help=\\\"//ke.qq.com\\\">\\n          垂直的收费\\n        </Label>\\n        <CheckGroup options={options} inline={false} />\\n      </FormRow>\\n      <FormRow>\\n        <Label required>报名截止时间</Label>\\n        <Datepicker />\\n      </FormRow>\\n    </Form>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      FormRow,\n      Label,\n      Button,\n      Radio,\n      RadioGroup,\n      Input,\n      CheckGroup,\n      Checkbox,\n      Datepicker,\n      Validator,\n      Dropdown,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const options = [{\n          label: '班级通收费',\n          id: 0\n        }, {\n          label: '班级1',\n          id: 1\n        }, {\n          label: '班级2',\n          id: 2\n        }];\n        return <Form mdxType=\"Form\">\n            <FormRow mdxType=\"FormRow\">\n              <Label required help=\"//ke.qq.com\" mdxType=\"Label\">课程名称</Label>\n              <Input mdxType=\"Input\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n              <Label required help=\"//ke.qq.com\" mdxType=\"Label\">是否收费</Label>\n              <RadioGroup mdxType=\"RadioGroup\">\n                <Radio value={0} mdxType=\"Radio\">免费</Radio>\n                <Radio value={1} mdxType=\"Radio\">付费</Radio>\n              </RadioGroup>\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n              <Label required help=\"//ke.qq.com\" mdxType=\"Label\">上架IOS</Label>\n              <RadioGroup inline={false} mdxType=\"RadioGroup\">\n                <Radio value={0} mdxType=\"Radio\">是</Radio>\n                <Radio value={1} mdxType=\"Radio\">否</Radio>\n              </RadioGroup>\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n              <Label required help=\"//ke.qq.com\" mdxType=\"Label\">收费</Label>\n              <CheckGroup options={options} mdxType=\"CheckGroup\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n              <Label required help=\"//ke.qq.com\" mdxType=\"Label\">垂直的收费</Label>\n              <CheckGroup options={options} inline={false} mdxType=\"CheckGroup\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n              <Label required mdxType=\"Label\">报名截止时间</Label>\n              <Datepicker mdxType=\"Datepicker\" />\n            </FormRow>\n          </Form>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"non-horizontal\"\n    }}>{`Non-horizontal`}</h2>\n    <Playground __position={4} __code={'<Form horizontal={false}>\\n  <FormRow>\\n    <Label required>课程名称</Label>\\n    <Input style={{ width: 165 }} />\\n  </FormRow>\\n  <FormRow>\\n    <Label required>老师名称</Label>\\n    <Input style={{ width: 165 }} />\\n  </FormRow>\\n  <FormRow>\\n    <Label required>开始时间</Label>\\n    <Datepicker />\\n  </FormRow>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      FormRow,\n      Label,\n      Button,\n      Radio,\n      RadioGroup,\n      Input,\n      CheckGroup,\n      Checkbox,\n      Datepicker,\n      Validator,\n      Dropdown,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      <Form horizontal={false} mdxType=\"Form\">\n            <FormRow mdxType=\"FormRow\">\n              <Label required mdxType=\"Label\">课程名称</Label>\n              <Input style={{\n            width: 165\n          }} mdxType=\"Input\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n              <Label required mdxType=\"Label\">老师名称</Label>\n              <Input style={{\n            width: 165\n          }} mdxType=\"Input\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n              <Label required mdxType=\"Label\">开始时间</Label>\n              <Datepicker mdxType=\"Datepicker\" />\n            </FormRow>\n          </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"inline--horizontal\"\n    }}>{`Inline & Horizontal`}</h2>\n    <Playground __position={5} __code={'<Form inline>\\n  <FormRow>\\n    <Label required>课程名称</Label>\\n    <Input style={{ width: 165 }} />\\n  </FormRow>\\n  <FormRow>\\n    <Label required>老师名称</Label>\\n    <Input style={{ width: 165 }} />\\n  </FormRow>\\n  <FormRow>\\n    <Label required>开始时间</Label>\\n    <Datepicker />\\n  </FormRow>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      FormRow,\n      Label,\n      Button,\n      Radio,\n      RadioGroup,\n      Input,\n      CheckGroup,\n      Checkbox,\n      Datepicker,\n      Validator,\n      Dropdown,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Form inline mdxType=\"Form\">\n            <FormRow mdxType=\"FormRow\">\n              <Label required mdxType=\"Label\">课程名称</Label>\n              <Input style={{\n            width: 165\n          }} mdxType=\"Input\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n              <Label required mdxType=\"Label\">老师名称</Label>\n              <Input style={{\n            width: 165\n          }} mdxType=\"Input\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n              <Label required mdxType=\"Label\">开始时间</Label>\n              <Datepicker mdxType=\"Datepicker\" />\n            </FormRow>\n          </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"inline--non-horizontal\"\n    }}>{`Inline & Non-horizontal`}</h2>\n    <Playground __position={6} __code={'<Form inline horizontal={false}>\\n  <FormRow>\\n    <Label required>课程名称</Label>\\n    <Input style={{ width: 165 }} />\\n  </FormRow>\\n  <FormRow>\\n    <Label required>老师名称</Label>\\n    <Input style={{ width: 165 }} />\\n  </FormRow>\\n  <FormRow>\\n    <Label required>开始时间</Label>\\n    <Datepicker />\\n  </FormRow>\\n</Form>'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      FormRow,\n      Label,\n      Button,\n      Radio,\n      RadioGroup,\n      Input,\n      CheckGroup,\n      Checkbox,\n      Datepicker,\n      Validator,\n      Dropdown,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Form inline horizontal={false} mdxType=\"Form\">\n        <FormRow mdxType=\"FormRow\">\n            <Label required mdxType=\"Label\">课程名称</Label>\n            <Input style={{\n            width: 165\n          }} mdxType=\"Input\" />\n        </FormRow>\n        <FormRow mdxType=\"FormRow\">\n            <Label required mdxType=\"Label\">老师名称</Label>\n            <Input style={{\n            width: 165\n          }} mdxType=\"Input\" />\n        </FormRow>\n        <FormRow mdxType=\"FormRow\">\n            <Label required mdxType=\"Label\">开始时间</Label>\n            <Datepicker mdxType=\"Datepicker\" />\n        </FormRow>\n    </Form>\n    </Playground>\n    <h2 {...{\n      \"id\": \"work-with-validator\"\n    }}>{`Work with Validator`}</h2>\n    <Playground __position={7} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        disabled: true,\\n      }\\n      this.onValid = this.onValid.bind(this)\\n      this.onInValid = this.onInValid.bind(this)\\n      this.checkers = {\\n        same: (val, callback) => {\\n          const password = this.password.getValue()\\n          callback({\\n            isValid: password === val,\\n            msg: \\'密码不一致\\',\\n          })\\n        },\\n      }\\n    }\\n    onValid() {\\n      this.setState({ disabled: false })\\n    }\\n    onInValid() {\\n      this.setState({ disabled: true })\\n    }\\n    render() {\\n      return (\\n        <Form>\\n          <Validator\\n            checkers={this.checkers}\\n            onValid={this.onValid}\\n            onInValid={this.onInValid}\\n          >\\n            <FormRow>\\n              <Label required>邮箱</Label>\\n              <Input\\n                name=\\\"email\\\"\\n                data-required\\n                data-patterns={[\\n                  {\\n                    key: \\'email\\',\\n                    msg: \\'格式不正确\\',\\n                  },\\n                ]}\\n              />\\n            </FormRow>\\n            <FormRow>\\n              <Label required>密码</Label>\\n              <Input\\n                name=\\\"password\\\"\\n                type=\\\"password\\\"\\n                ref={instance => {\\n                  this.password = instance\\n                }}\\n                data-required\\n                data-patterns={[\\n                  {\\n                    key: \\'limit\\',\\n                    msg: \\'密码长度应在6-10位\\',\\n                    limit: {\\n                      min: 6,\\n                      max: 10,\\n                    },\\n                  },\\n                ]}\\n              />\\n            </FormRow>\\n            <FormRow>\\n              <Label required>确认密码</Label>\\n              <Input\\n                name=\\\"c-password\\\"\\n                type=\\\"password\\\"\\n                data-required\\n                data-patterns={[\\n                  {\\n                    key: \\'limit\\',\\n                    msg: \\'密码长度应在6-10位\\',\\n                    limit: {\\n                      min: 6,\\n                      max: 10,\\n                    },\\n                  },\\n                  {\\n                    key: \\'same\\',\\n                  },\\n                ]}\\n              />\\n            </FormRow>\\n            <FormRow>\\n              <Label>个性签名</Label>\\n              <Input\\n                name=\\\"sign\\\"\\n                type=\\\"textarea\\\"\\n                data-patterns={[\\n                  {\\n                    key: \\'limit\\',\\n                    msg: \\'100个字以内\\',\\n                    min: 1,\\n                    max: 100,\\n                  },\\n                ]}\\n              />\\n            </FormRow>\\n          </Validator>\\n          <Button\\n            type=\\\"button\\\"\\n            style={{ marginLeft: 120 }}\\n            disabled={this.state.disabled}\\n          >\\n            注册\\n          </Button>\\n        </Form>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      FormRow,\n      Label,\n      Button,\n      Radio,\n      RadioGroup,\n      Input,\n      CheckGroup,\n      Checkbox,\n      Datepicker,\n      Validator,\n      Dropdown,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              disabled: true\n            };\n            this.onValid = this.onValid.bind(this);\n            this.onInValid = this.onInValid.bind(this);\n            this.checkers = {\n              same: (val, callback) => {\n                const password = this.password.getValue();\n                callback({\n                  isValid: password === val,\n                  msg: '密码不一致'\n                });\n              }\n            };\n          }\n\n          onValid() {\n            this.setState({\n              disabled: false\n            });\n          }\n\n          onInValid() {\n            this.setState({\n              disabled: true\n            });\n          }\n\n          render() {\n            return <Form mdxType=\"Form\">\n                <Validator checkers={this.checkers} onValid={this.onValid} onInValid={this.onInValid} mdxType=\"Validator\">\n                <FormRow mdxType=\"FormRow\">\n                    <Label required mdxType=\"Label\">邮箱</Label>\n                    <Input name=\"email\" data-required data-patterns={[{\n                    key: 'email',\n                    msg: '格式不正确'\n                  }]} mdxType=\"Input\" />\n                </FormRow>\n                <FormRow mdxType=\"FormRow\">\n                    <Label required mdxType=\"Label\">密码</Label>\n                    <Input name=\"password\" type=\"password\" ref={instance => {\n                    this.password = instance;\n                  }} data-required data-patterns={[{\n                    key: 'limit',\n                    msg: '密码长度应在6-10位',\n                    limit: {\n                      min: 6,\n                      max: 10\n                    }\n                  }]} mdxType=\"Input\" />\n                </FormRow>\n                <FormRow mdxType=\"FormRow\">\n                    <Label required mdxType=\"Label\">确认密码</Label>\n                    <Input name=\"c-password\" type=\"password\" data-required data-patterns={[{\n                    key: 'limit',\n                    msg: '密码长度应在6-10位',\n                    limit: {\n                      min: 6,\n                      max: 10\n                    }\n                  }, {\n                    key: 'same'\n                  }]} mdxType=\"Input\" />\n                </FormRow>\n                <FormRow mdxType=\"FormRow\">\n                    <Label mdxType=\"Label\">个性签名</Label>\n                    <Input name=\"sign\" type=\"textarea\" data-patterns={[{\n                    key: 'limit',\n                    msg: '100个字以内',\n                    min: 1,\n                    max: 100\n                  }]} mdxType=\"Input\" />\n                </FormRow>\n                </Validator>\n                <Button type=\"button\" style={{\n                marginLeft: 120\n              }} disabled={this.state.disabled} mdxType=\"Button\">\n                注册\n                </Button>\n            </Form>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"form-instances-api\"\n    }}>{`Form Instances API`}</h2>\n    <pre><code parentName=\"pre\" {...{}}>{`注意：使用Form API时，表单组件使用Form命名空间下的组件，见下面一个demo\n`}</code></pre>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`API`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`类型`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getValues`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`获取此Form下的所有带name的表单组件的值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Function(): `}<inlineCode parentName=\"td\">{`object {name -> value}`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setValues`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`设置此Form下的所有带name的表单组件的值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Function(): `}<inlineCode parentName=\"td\">{`object {name -> value}`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getFieldValue(name)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`获取对应表单的值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Function(name: `}<inlineCode parentName=\"td\">{`string`}</inlineCode>{`): `}<inlineCode parentName=\"td\">{`any`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setFieldValue(name, value)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`设置对应表单的值`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Function(name: `}<inlineCode parentName=\"td\">{`string`}</inlineCode>{`, value: `}<inlineCode parentName=\"td\">{`any`}</inlineCode>{`): `}<inlineCode parentName=\"td\">{`bool`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <pre><code parentName=\"pre\" {...{}}>{`几点说明：\n* Form组件主要解决表单布局的问题，如果有什么新的建议或者想法提issue出来哈！\n* Form组件为其所有子元素提供了一个context，\\`this.context.form\\`就是Form组件实例\n* Form布局实现有更改\\`im-form--{修饰}\\`类下的表单组件如\\`im-checkgroup\\`，\\`im-radio-group\\`的样式，如果出现布局问题可以自行更改\n`}</code></pre>\n    <Playground __position={8} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        values: \\'\\',\\n      }\\n      this.getFormValues = this.getFormValues.bind(this)\\n      this.setFormValues = this.setFormValues.bind(this)\\n      this.editingValues = this.editingValues.bind(this)\\n    }\\n    getFormValues() {\\n      const values = this.refs.myForm.getValues()\\n      this.setState({ values: JSON.stringify(values) })\\n    }\\n    setFormValues() {\\n      const values = JSON.parse(this.state.values)\\n      this.refs.myForm.setValues(values)\\n    }\\n    editingValues(values) {\\n      this.setState({ values })\\n    }\\n    render() {\\n      const checkOpts = [\\n        {\\n          label: \\'默认选中且disabled\\',\\n          id: 1,\\n          disabled: true,\\n        },\\n        {\\n          label: \\'默认待选中\\',\\n          id: 2,\\n        },\\n        {\\n          label: <span>默认选中，带有自定义标签/元素的label</span>,\\n          id: 3,\\n        },\\n      ]\\n      return (\\n        <Form ref=\\\"myForm\\\">\\n          <FormRow>\\n            <p>Form.Input</p>\\n            <Input name=\\\"input\\\" style={{ width: 165 }} />\\n          </FormRow>\\n          <FormRow>\\n            <p>Form.Datepicker</p>\\n            <Datepicker name=\\\"datepicker\\\" />\\n          </FormRow>\\n          <FormRow>\\n            <p>Form.Dropdown</p>\\n            <Dropdown\\n              name=\\\"dropdown\\\"\\n              options={[{ value: \\'A\\' }, { value: \\'B\\' }, { value: \\'C\\' }]}\\n              style={{ width: \\'200px\\' }}\\n            />\\n          </FormRow>\\n          <FormRow>\\n            <p>Form.Checkbox</p>\\n            <Checkbox name=\\\"checkbox\\\" checked />\\n          </FormRow>\\n          <FormRow>\\n            <p>Form.CheckGroup</p>\\n            <CheckGroup\\n              name=\\\"checkgroup\\\"\\n              options={checkOpts}\\n              value={[1, 3]}\\n            />\\n          </FormRow>\\n          <FormRow>\\n            <p>Form.RadioGroup</p>\\n            <RadioGroup name=\\\"radiogroup\\\">\\n              <Radio value={0}>免费</Radio>\\n              <Radio value={1}>收费</Radio>\\n            </RadioGroup>\\n          </FormRow>\\n          <Button type=\\\"button\\\" onClick={this.getFormValues}>\\n            getValues\\n          </Button>\\n          <Button\\n            type=\\\"button\\\"\\n            style={{ marginLeft: 40 }}\\n            onClick={this.setFormValues}\\n          >\\n            setValues\\n          </Button>\\n          <Input\\n            placeholder=\\\"按钮点击结果展示\\\"\\n            value={this.state.values}\\n            onChange={this.editingValues}\\n            style={{\\n              display: \\'block\\',\\n              marginTop: 20,\\n              width: 400,\\n            }}\\n          />\\n        </Form>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Form,\n      FormRow,\n      Label,\n      Button,\n      Radio,\n      RadioGroup,\n      Input,\n      CheckGroup,\n      Checkbox,\n      Datepicker,\n      Validator,\n      Dropdown,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              values: ''\n            };\n            this.getFormValues = this.getFormValues.bind(this);\n            this.setFormValues = this.setFormValues.bind(this);\n            this.editingValues = this.editingValues.bind(this);\n          }\n\n          getFormValues() {\n            const values = this.refs.myForm.getValues();\n            this.setState({\n              values: JSON.stringify(values)\n            });\n          }\n\n          setFormValues() {\n            const values = JSON.parse(this.state.values);\n            this.refs.myForm.setValues(values);\n          }\n\n          editingValues(values) {\n            this.setState({\n              values\n            });\n          }\n\n          render() {\n            const checkOpts = [{\n              label: '默认选中且disabled',\n              id: 1,\n              disabled: true\n            }, {\n              label: '默认待选中',\n              id: 2\n            }, {\n              label: <span>默认选中，带有自定义标签/元素的label</span>,\n              id: 3\n            }];\n            return <Form ref=\"myForm\" mdxType=\"Form\">\n            <FormRow mdxType=\"FormRow\">\n            <p>Form.Input</p>\n            <Input name=\"input\" style={{\n                  width: 165\n                }} mdxType=\"Input\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n            <p>Form.Datepicker</p>\n            <Datepicker name=\"datepicker\" mdxType=\"Datepicker\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n            <p>Form.Dropdown</p>\n            <Dropdown name=\"dropdown\" options={[{\n                  value: 'A'\n                }, {\n                  value: 'B'\n                }, {\n                  value: 'C'\n                }]} style={{\n                  width: '200px'\n                }} mdxType=\"Dropdown\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n            <p>Form.Checkbox</p>\n            <Checkbox name=\"checkbox\" checked mdxType=\"Checkbox\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n            <p>Form.CheckGroup</p>\n            <CheckGroup name=\"checkgroup\" options={checkOpts} value={[1, 3]} mdxType=\"CheckGroup\" />\n            </FormRow>\n            <FormRow mdxType=\"FormRow\">\n            <p>Form.RadioGroup</p>\n            <RadioGroup name=\"radiogroup\" mdxType=\"RadioGroup\">\n                <Radio value={0} mdxType=\"Radio\">免费</Radio>\n                <Radio value={1} mdxType=\"Radio\">收费</Radio>\n            </RadioGroup>\n            </FormRow>\n            <Button type=\"button\" onClick={this.getFormValues} mdxType=\"Button\">getValues</Button>\n            <Button type=\"button\" style={{\n                marginLeft: 40\n              }} onClick={this.setFormValues} mdxType=\"Button\">setValues</Button>\n            <Input placeholder=\"按钮点击结果展示\" value={this.state.values} onChange={this.editingValues} style={{\n                display: 'block',\n                marginTop: 20,\n                width: 400\n              }} mdxType=\"Input\" />\n        </Form>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}