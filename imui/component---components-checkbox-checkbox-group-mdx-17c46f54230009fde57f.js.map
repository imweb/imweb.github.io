{"version":3,"sources":["webpack:///../components/checkbox/Checkbox Group.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","CheckGroup","__position","__code","__scope","Button","Playground","Props","Icon","myOptions","label","id","options","inline","style","height","disabled","type","value","Example","state","values","handleChange","bind","ids","this","setState","render","onChange","JSON","stringify","React","isMDXComponent"],"mappings":"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","file":"component---components-checkbox-checkbox-group-mdx-17c46f54230009fde57f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/shijisun/edu/projects/imui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { CheckGroup } from './index';\nimport Button from '../button/index';\nimport { Playground, Props } from 'docz';\nimport './style/index.scss';\nimport Icon from '../icon/index';\nimport '../icon/style/index.scss';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"checkbox-group\"\n    }}>{`Checkbox Group`}</h1>\n\n    <h2 {...{\n      \"id\": \"props--methods\"\n    }}>{`Props & Methods`}</h2>\n    <Props of={CheckGroup} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"inline-display\"\n    }}>{`Inline Display`}</h2>\n    <Playground __position={1} __code={'() => {\\n  const myOptions = [\\n    {\\n      label: \\'Option 1\\',\\n      id: 1,\\n    },\\n    {\\n      label: \\'Option 2\\',\\n      id: 2,\\n    },\\n    {\\n      label: \\'Option 3\\',\\n      id: 3,\\n    },\\n  ]\\n  return (\\n    <>\\n      <CheckGroup options={myOptions} inline={true} />\\n      <div style={{ height: \\'10px\\' }}></div>\\n      <CheckGroup options={myOptions} inline={false} />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      CheckGroup,\n      Button,\n      Playground,\n      Props,\n      Icon,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const myOptions = [{\n          label: 'Option 1',\n          id: 1\n        }, {\n          label: 'Option 2',\n          id: 2\n        }, {\n          label: 'Option 3',\n          id: 3\n        }];\n        return <><CheckGroup options={myOptions} inline={true} mdxType=\"CheckGroup\" />\n          <div style={{\n            height: '10px'\n          }}></div>\n          <CheckGroup options={myOptions} inline={false} mdxType=\"CheckGroup\" />\n          </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"options\"\n    }}>{`Options`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const myOptions = [\\n    {\\n      label: \\'Default Option\\',\\n      id: 1,\\n    },\\n    {\\n      label: \\'Disabled Option\\',\\n      id: 2,\\n      disabled: true,\\n    },\\n    {\\n      label: (\\n        <span>\\n          Option with Icon Label\\n          <Icon type=\\\"weixin\\\" />\\n        </span>\\n      ),\\n      id: 3,\\n    },\\n  ]\\n  return <CheckGroup options={myOptions} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      CheckGroup,\n      Button,\n      Playground,\n      Props,\n      Icon,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const myOptions = [{\n          label: 'Default Option',\n          id: 1\n        }, {\n          label: 'Disabled Option',\n          id: 2,\n          disabled: true\n        }, {\n          label: <span>Option with Icon Label<Icon type=\"weixin\" mdxType=\"Icon\" /></span>,\n          id: 3\n        }];\n        return <CheckGroup options={myOptions} mdxType=\"CheckGroup\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"values\"\n    }}>{`Values`}</h2>\n    <Playground __position={3} __code={'() => {\\n  const myOptions = [\\n    {\\n      label: \\'Default Option\\',\\n      id: 1,\\n    },\\n    {\\n      label: \\'Checked Option\\',\\n      id: 2,\\n    },\\n    {\\n      label: \\'Ckecked & Disabled Option\\',\\n      id: 3,\\n      disabled: true,\\n    },\\n  ]\\n  const myValues = [2, 3]\\n  return <CheckGroup options={myOptions} value={myValues} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      CheckGroup,\n      Button,\n      Playground,\n      Props,\n      Icon,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const myOptions = [{\n          label: 'Default Option',\n          id: 1\n        }, {\n          label: 'Checked Option',\n          id: 2\n        }, {\n          label: 'Ckecked & Disabled Option',\n          id: 3,\n          disabled: true\n        }];\n        const myValues = [2, 3];\n        return <CheckGroup options={myOptions} value={myValues} mdxType=\"CheckGroup\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"onchange\"\n    }}>{`Onchange`}</h2>\n    <Playground __position={4} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        values: [],\\n      }\\n      this.handleChange = this.handleChange.bind(this)\\n    }\\n    handleChange(ids) {\\n      this.setState({\\n        values: ids,\\n      })\\n    }\\n    render() {\\n      const myOptions = [\\n        {\\n          label: \\'Option 1\\',\\n          id: 1,\\n        },\\n        {\\n          label: \\'Option 2\\',\\n          id: 2,\\n        },\\n        {\\n          label: \\'Option 3\\',\\n          id: 3,\\n        },\\n      ]\\n      return (\\n        <>\\n          <CheckGroup\\n            options={myOptions}\\n            value={this.state.values}\\n            onChange={this.handleChange}\\n          />\\n          <p>\\n            The id list you just checked：{JSON.stringify(this.state.values)}\\n          </p>\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      CheckGroup,\n      Button,\n      Playground,\n      Props,\n      Icon,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              values: []\n            };\n            this.handleChange = this.handleChange.bind(this);\n          }\n\n          handleChange(ids) {\n            this.setState({\n              values: ids\n            });\n          }\n\n          render() {\n            const myOptions = [{\n              label: 'Option 1',\n              id: 1\n            }, {\n              label: 'Option 2',\n              id: 2\n            }, {\n              label: 'Option 3',\n              id: 3\n            }];\n            return <>\n                        <CheckGroup options={myOptions} value={this.state.values} onChange={this.handleChange} mdxType=\"CheckGroup\" />\n                        <p>The id list you just checked：{JSON.stringify(this.state.values)}</p>\n                    </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}