{"version":3,"sources":["webpack:///../components/dropdown/Dropdown.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Dropdown","DropdownOption","__position","__code","__scope","Button","Icon","Playground","Props","options","value","style","width","placeholder","cleanable","display","noIcon","noBorder","showSelectedIcon","disabled","dropdownWidth","hoverable","bigOptions","i","push","search","searchable","myOptions","Example","state","asnycOptions","render","this","onClick","setState","size","React","type","label","groupOptions","map","option","Option","key","float","toUpperCase","group","OptionGroup","onBlur","console","log","onFocus","onCloseDropDown","isMDXComponent"],"mappings":"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","file":"component---components-dropdown-dropdown-mdx-cf26637349fafc0c3494.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/shijisun/edu/projects/imui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Dropdown from './index';\nimport DropdownOption from './lib/DropdownOption';\nimport Button from '../button/index';\nimport Icon from '../icon/index';\nimport { Playground, Props } from 'docz';\nimport './style/index.scss';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dropdown\"\n    }}>{`Dropdown`}</h1>\n\n    <h2 {...{\n      \"id\": \"props--methods\"\n    }}>{`Props & Methods`}</h2>\n    <Props of={Dropdown} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"-options\"\n    }}>{`👆 options`}</h3>\n    <Props of={DropdownOption} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <Playground __position={2} __code={'<Dropdown\\n  options={[{ value: \\'Apple\\' }, { value: \\'Banana\\' }, { value: \\'Coconut\\' }]}\\n  style={{ width: \\'200px\\' }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Dropdown options={[{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Coconut'\n      }]} style={{\n        width: '200px'\n      }} mdxType=\"Dropdown\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"placeholder\"\n    }}>{`Placeholder`}</h2>\n    <Playground __position={3} __code={'<Dropdown\\n  options={[{ value: \\'Apple\\' }, { value: \\'Banana\\' }, { value: \\'Coconut\\' }]}\\n  style={{ width: \\'200px\\' }}\\n  placeholder=\\\"I am the placeholder\\\"\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      <Dropdown options={[{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Coconut'\n      }]} style={{\n        width: '200px'\n      }} placeholder=\"I am the placeholder\" mdxType=\"Dropdown\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"display-variants\"\n    }}>{`Display Variants`}</h2>\n    <Playground __position={4} __code={'<Dropdown\\n  options={[{ value: \\'Apple\\' }, { value: \\'Banana\\' }, { value: \\'Coconut\\' }]}\\n  style={{ width: \\'200px\\' }}\\n  placeholder=\\\"I am cleanable\\\"\\n  cleanable\\n/>\\n<span style={{ display: \\'inline-block\\', width: \\'15px\\' }}></span>\\n<Dropdown\\n  options={[{ value: \\'Apple\\' }, { value: \\'Banana\\' }, { value: \\'Coconut\\' }]}\\n  placeholder={\\'No icon on the right!\\'}\\n  style={{ width: \\'200px\\' }}\\n  noIcon\\n/>\\n<span style={{ display: \\'inline-block\\', width: \\'15px\\' }}></span>\\n<Dropdown\\n  options={[{ value: \\'Apple\\' }, { value: \\'Banana\\' }, { value: \\'Coconut\\' }]}\\n  placeholder={\\'No border around!\\'}\\n  style={{ width: \\'200px\\' }}\\n  noBorder\\n/>\\n<span style={{ display: \\'inline-block\\', width: \\'15px\\' }}></span>\\n<Dropdown\\n  options={[{ value: \\'Apple\\' }, { value: \\'Banana\\' }, { value: \\'Coconut\\' }]}\\n  placeholder={\\'Selected icon shows!\\'}\\n  showSelectedIcon\\n  style={{ width: \\'200px\\' }}\\n/>\\n<span style={{ display: \\'inline-block\\', width: \\'15px\\' }}></span>\\n<Dropdown\\n  options={[{ value: \\'Apple\\' }, { value: \\'Banana\\' }, { value: \\'Coconut\\' }]}\\n  placeholder={\\'I am disabled\\'}\\n  style={{ width: \\'200px\\' }}\\n  disabled\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Dropdown options={[{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Coconut'\n      }]} style={{\n        width: '200px'\n      }} placeholder=\"I am cleanable\" cleanable mdxType=\"Dropdown\" />\n    <span style={{\n        display: 'inline-block',\n        width: '15px'\n      }}></span>\n    <Dropdown options={[{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Coconut'\n      }]} placeholder={'No icon on the right!'} style={{\n        width: '200px'\n      }} noIcon mdxType=\"Dropdown\" />\n    <span style={{\n        display: 'inline-block',\n        width: '15px'\n      }}></span>\n    <Dropdown options={[{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Coconut'\n      }]} placeholder={'No border around!'} style={{\n        width: '200px'\n      }} noBorder mdxType=\"Dropdown\" />\n    <span style={{\n        display: 'inline-block',\n        width: '15px'\n      }}></span>\n    <Dropdown options={[{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Coconut'\n      }]} placeholder={'Selected icon shows!'} showSelectedIcon style={{\n        width: '200px'\n      }} mdxType=\"Dropdown\" />\n    <span style={{\n        display: 'inline-block',\n        width: '15px'\n      }}></span>\n    <Dropdown options={[{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Coconut'\n      }]} placeholder={'I am disabled'} style={{\n        width: '200px'\n      }} disabled mdxType=\"Dropdown\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"set-width-of-dropdown\"\n    }}>{`Set Width of Dropdown`}</h2>\n    <Playground __position={5} __code={'<Dropdown\\n  options={[{ value: \\'Apple\\' }, { value: \\'Banana\\' }, { value: \\'Coconut\\' }]}\\n  placeholder={\\'A default dropdown!\\'}\\n  style={{ width: \\'200px\\' }}\\n/>\\n<span style={{ display: \\'inline-block\\', width: \\'15px\\' }}></span>\\n<Dropdown\\n  options={[{ value: \\'Apple\\' }, { value: \\'Banana\\' }, { value: \\'Coconut\\' }]}\\n  placeholder={\\'A narrow dropdown!\\'}\\n  style={{ width: \\'200px\\' }}\\n  dropdownWidth={100}\\n/>\\n<span style={{ display: \\'inline-block\\', width: \\'15px\\' }}></span>\\n<Dropdown\\n  options={[{ value: \\'Apple\\' }, { value: \\'Banana\\' }, { value: \\'Coconut\\' }]}\\n  placeholder={\\'A wide dropdown!\\'}\\n  style={{ width: \\'200px\\' }}\\n  dropdownWidth={400}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Dropdown options={[{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Coconut'\n      }]} placeholder={'A default dropdown!'} style={{\n        width: '200px'\n      }} mdxType=\"Dropdown\" />\n    <span style={{\n        display: 'inline-block',\n        width: '15px'\n      }}></span>\n    <Dropdown options={[{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Coconut'\n      }]} placeholder={'A narrow dropdown!'} style={{\n        width: '200px'\n      }} dropdownWidth={100} mdxType=\"Dropdown\" />\n    <span style={{\n        display: 'inline-block',\n        width: '15px'\n      }}></span>\n    <Dropdown options={[{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Coconut'\n      }]} placeholder={'A wide dropdown!'} style={{\n        width: '200px'\n      }} dropdownWidth={400} mdxType=\"Dropdown\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"hoverable\"\n    }}>{`Hoverable`}</h2>\n    <Playground __position={6} __code={'<Dropdown\\n  options={[{ value: \\'Apple\\' }, { value: \\'Banana\\' }, { value: \\'Coconut\\' }]}\\n  style={{ width: \\'200px\\' }}\\n  placeholder=\\\"I am hoverable\\\"\\n  hoverable\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      <Dropdown options={[{\n        value: 'Apple'\n      }, {\n        value: 'Banana'\n      }, {\n        value: 'Coconut'\n      }]} style={{\n        width: '200px'\n      }} placeholder=\"I am hoverable\" hoverable mdxType=\"Dropdown\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"searchable\"\n    }}>{`Searchable`}</h2>\n    <Playground __position={7} __code={'() => {\\n  let bigOptions = []\\n  for (let i = 0; i < 100; i++) {\\n    bigOptions.push({\\n      value: i,\\n      display: `display${i}`,\\n      search: `display${i}`,\\n    })\\n  }\\n  return (\\n    <Dropdown\\n      options={bigOptions}\\n      placeholder={\\'Type to search\\'}\\n      searchable\\n      style={{ width: \\'200px\\' }}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        let bigOptions = [];\n\n        for (let i = 0; i < 100; i++) {\n          bigOptions.push({\n            value: i,\n            display: `display${i}`,\n            search: `display${i}`\n          });\n        }\n\n        return <Dropdown options={bigOptions} placeholder={'Type to search'} searchable style={{\n          width: '200px'\n        }} mdxType=\"Dropdown\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"preset-option\"\n    }}>{`Preset Option`}</h2>\n    <Playground __position={8} __code={'() => {\\n  const myOptions = [\\n    { value: \\'Apple\\' },\\n    { value: \\'Banana\\' },\\n    { value: \\'Coconut\\' },\\n  ]\\n  return (\\n    <Dropdown\\n      options={myOptions}\\n      value={myOptions[0].value}\\n      style={{ width: \\'200px\\' }}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const myOptions = [{\n          value: 'Apple'\n        }, {\n          value: 'Banana'\n        }, {\n          value: 'Coconut'\n        }];\n        return <Dropdown options={myOptions} value={myOptions[0].value} style={{\n          width: '200px'\n        }} mdxType=\"Dropdown\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"async-options\"\n    }}>{`Async Options`}</h2>\n    <Playground __position={9} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        asnycOptions: null,\\n      }\\n    }\\n    render() {\\n      return (\\n        <>\\n          <Dropdown\\n            options={this.state.asnycOptions}\\n            style={{ width: \\'200px\\' }}\\n          />\\n          <span style={{ display: \\'inline-block\\', width: \\'15px\\' }}></span>\\n          <Button\\n            onClick={() => {\\n              this.setState({\\n                asnycOptions: [\\n                  { value: \\'Apple\\' },\\n                  { value: \\'Banana\\' },\\n                  { value: \\'Coconut\\' },\\n                ],\\n              })\\n            }}\\n            size=\\\"s\\\"\\n          >\\n            Click me to load async options\\n          </Button>\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              asnycOptions: null\n            };\n          }\n\n          render() {\n            return <>\n                <Dropdown options={this.state.asnycOptions} style={{\n                width: '200px'\n              }} mdxType=\"Dropdown\" />\n                <span style={{\n                display: 'inline-block',\n                width: '15px'\n              }}></span>\n                <Button onClick={() => {\n                this.setState({\n                  asnycOptions: [{\n                    value: 'Apple'\n                  }, {\n                    value: 'Banana'\n                  }, {\n                    value: 'Coconut'\n                  }]\n                });\n              }} size='s' mdxType=\"Button\">Click me to load async options</Button>\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"icon-options\"\n    }}>{`Icon Options`}</h2>\n    <Playground __position={10} __code={'<Dropdown\\n  options={[\\n    {\\n      display: <Icon type=\\\"add\\\" />,\\n      value: \\'1\\', // value is for identity\\n    },\\n    {\\n      display: <Icon type=\\\"alert\\\" />,\\n      value: \\'2\\',\\n    },\\n    {\\n      display: (\\n        <>\\n          <Icon type=\\\"arrow-bottom\\\" />\\n          <span> Hello</span>\\n        </>\\n      ),\\n      value: \\'3\\',\\n    },\\n  ]}\\n  placeholder={\\'Options with Icon!\\'}\\n  style={{ width: \\'200px\\' }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Dropdown options={[{\n        display: <Icon type=\"add\" mdxType=\"Icon\" />,\n        value: '1' // value is for identity\n\n      }, {\n        display: <Icon type=\"alert\" mdxType=\"Icon\" />,\n        value: '2'\n      }, {\n        display: <><Icon type=\"arrow-bottom\" mdxType=\"Icon\" /><span> Hello</span></>,\n        value: '3'\n      }]} placeholder={'Options with Icon!'} style={{\n        width: '200px'\n      }} mdxType=\"Dropdown\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"group-options\"\n    }}>{`Group Options`}</h2>\n    <Playground __position={11} __code={'() => {\\n  const groupOptions = [\\n    {\\n      label: \\'热门城市\\',\\n      options: [\\n        {\\n          value: \\'Beijing\\',\\n          display: \\'北京\\',\\n          search: \\'北京\\',\\n        },\\n        {\\n          value: \\'Shanghai\\',\\n          display: \\'上海\\',\\n          search: \\'上海\\',\\n        },\\n        {\\n          value: \\'Guangzhou\\',\\n          display: \\'广州\\',\\n          search: \\'广州\\',\\n        },\\n      ],\\n    },\\n    {\\n      label: \\'城市名\\',\\n      options: [\\n        {\\n          value: \\'Chengdu\\',\\n          display: \\'成都\\',\\n          search: \\'成都\\',\\n        },\\n        {\\n          value: \\'Shenzhen\\',\\n          display: \\'深圳\\',\\n          search: \\'深圳\\',\\n        },\\n        {\\n          value: \\'Guangzhou\\',\\n          display: \\'广州\\',\\n          search: \\'广州\\',\\n        },\\n        {\\n          value: \\'Hangzhou\\',\\n          display: \\'杭州\\',\\n          search: \\'杭州\\',\\n        },\\n      ],\\n    },\\n  ]\\n  return (\\n    <Dropdown\\n      options={groupOptions}\\n      placeholder={\\'Options with Group!\\'}\\n      style={{ width: \\'200px\\' }}\\n      searchable\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const groupOptions = [{\n          label: '热门城市',\n          options: [{\n            value: 'Beijing',\n            display: '北京',\n            search: '北京'\n          }, {\n            value: 'Shanghai',\n            display: '上海',\n            search: '上海'\n          }, {\n            value: 'Guangzhou',\n            display: '广州',\n            search: '广州'\n          }]\n        }, {\n          label: '城市名',\n          options: [{\n            value: 'Chengdu',\n            display: '成都',\n            search: '成都'\n          }, {\n            value: 'Shenzhen',\n            display: '深圳',\n            search: '深圳'\n          }, {\n            value: 'Guangzhou',\n            display: '广州',\n            search: '广州'\n          }, {\n            value: 'Hangzhou',\n            display: '杭州',\n            search: '杭州'\n          }]\n        }];\n        return <Dropdown options={groupOptions} placeholder={'Options with Group!'} style={{\n          width: '200px'\n        }} searchable mdxType=\"Dropdown\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"customized-options-template\"\n    }}>{`Customized Options Template`}</h2>\n    <Playground __position={12} __code={'() => {\\n  const options = [\\n    { value: \\'Apple\\' },\\n    { value: \\'Banana\\' },\\n    { value: \\'Coconut\\' },\\n  ]\\n  const groupOptions = [\\n    {\\n      label: \\'热门城市\\',\\n      options: [\\n        {\\n          value: \\'Beijing\\',\\n          display: \\'北京\\',\\n          search: \\'北京\\',\\n        },\\n        {\\n          value: \\'Shanghai\\',\\n          display: \\'上海\\',\\n          search: \\'上海\\',\\n        },\\n        {\\n          value: \\'Guangzhou\\',\\n          display: \\'广州\\',\\n          search: \\'广州\\',\\n        },\\n      ],\\n    },\\n    {\\n      label: \\'城市名\\',\\n      options: [\\n        {\\n          value: \\'Chengdu\\',\\n          display: \\'成都\\',\\n          search: \\'成都\\',\\n        },\\n        {\\n          value: \\'Shenzhen\\',\\n          display: \\'深圳\\',\\n          search: \\'深圳\\',\\n        },\\n        {\\n          value: \\'Guangzhou\\',\\n          display: \\'广州\\',\\n          search: \\'广州\\',\\n        },\\n        {\\n          value: \\'Hangzhou\\',\\n          display: \\'杭州\\',\\n          search: \\'杭州\\',\\n        },\\n      ],\\n    },\\n  ]\\n  return (\\n    <>\\n      <Dropdown\\n        options={options}\\n        placeholder={\\'Customized Simple Options\\'}\\n        style={{ width: \\'200px\\' }}\\n      >\\n        {options.map(option => {\\n          return (\\n            <Dropdown.Option key={option.value} option={option}>\\n              <span style={{ float: \\'left\\' }}>{option.value}</span>\\n              <span style={{ float: \\'right\\' }}>\\n                {option.value.toUpperCase()}\\n              </span>\\n            </Dropdown.Option>\\n          )\\n        })}\\n      </Dropdown>\\n      <span style={{ display: \\'inline-block\\', width: \\'15px\\' }}></span>\\n      <Dropdown\\n        options={groupOptions}\\n        placeholder={\\'Customized Group Options\\'}\\n        style={{ width: \\'200px\\' }}\\n        searchable\\n      >\\n        {groupOptions.map(group => {\\n          return (\\n            <Dropdown.OptionGroup key={group.label} label={group.label}>\\n              {group.options.map(option => {\\n                return (\\n                  <Dropdown.Option key={option.value} option={option}>\\n                    <span style={{ float: \\'left\\' }}>{option.display}</span>\\n                    <span style={{ float: \\'right\\' }}>{option.value}</span>\\n                  </Dropdown.Option>\\n                )\\n              })}\\n            </Dropdown.OptionGroup>\\n          )\\n        })}\\n      </Dropdown>\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const options = [{\n          value: 'Apple'\n        }, {\n          value: 'Banana'\n        }, {\n          value: 'Coconut'\n        }];\n        const groupOptions = [{\n          label: '热门城市',\n          options: [{\n            value: 'Beijing',\n            display: '北京',\n            search: '北京'\n          }, {\n            value: 'Shanghai',\n            display: '上海',\n            search: '上海'\n          }, {\n            value: 'Guangzhou',\n            display: '广州',\n            search: '广州'\n          }]\n        }, {\n          label: '城市名',\n          options: [{\n            value: 'Chengdu',\n            display: '成都',\n            search: '成都'\n          }, {\n            value: 'Shenzhen',\n            display: '深圳',\n            search: '深圳'\n          }, {\n            value: 'Guangzhou',\n            display: '广州',\n            search: '广州'\n          }, {\n            value: 'Hangzhou',\n            display: '杭州',\n            search: '杭州'\n          }]\n        }];\n        return <>\n        <Dropdown options={options} placeholder={'Customized Simple Options'} style={{\n            width: '200px'\n          }} mdxType=\"Dropdown\">{options.map(option => {\n              return <Dropdown.Option key={option.value} option={option}>\n                    <span style={{\n                  float: 'left'\n                }}>{option.value}</span>\n                    <span style={{\n                  float: 'right'\n                }}>{option.value.toUpperCase()}</span>\n                    </Dropdown.Option>;\n            })}\n        </Dropdown>\n        <span style={{\n            display: 'inline-block',\n            width: '15px'\n          }}></span>\n        <Dropdown options={groupOptions} placeholder={'Customized Group Options'} style={{\n            width: '200px'\n          }} searchable mdxType=\"Dropdown\">{groupOptions.map(group => {\n              return <Dropdown.OptionGroup key={group.label} label={group.label}>{group.options.map(option => {\n                  return <Dropdown.Option key={option.value} option={option}>\n                        <span style={{\n                      float: 'left'\n                    }}>{option.display}</span>\n                        <span style={{\n                      float: 'right'\n                    }}>{option.value}</span>\n                      </Dropdown.Option>;\n                })}</Dropdown.OptionGroup>;\n            })}\n        </Dropdown>\n    </>;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"onblur\"\n    }}>{`onBlur`}</h2>\n    <Playground __position={13} __code={'() => {\\n  const myOptions = [\\n    { value: \\'Apple\\' },\\n    { value: \\'Banana\\' },\\n    { value: \\'Coconut\\' },\\n  ]\\n  return (\\n    <Dropdown\\n      options={myOptions}\\n      placeholder=\\\"Select something!\\\"\\n      style={{ width: \\'200px\\' }}\\n      onBlur={console.log}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const myOptions = [{\n          value: 'Apple'\n        }, {\n          value: 'Banana'\n        }, {\n          value: 'Coconut'\n        }];\n        return <Dropdown options={myOptions} placeholder=\"Select something!\" style={{\n          width: '200px'\n        }} onBlur={console.log} mdxType=\"Dropdown\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"onfocus\"\n    }}>{`onFocus`}</h2>\n    <Playground __position={14} __code={'() => {\\n  const myOptions = [\\n    { value: \\'Apple\\' },\\n    { value: \\'Banana\\' },\\n    { value: \\'Coconut\\' },\\n  ]\\n  return (\\n    <Dropdown\\n      options={myOptions}\\n      placeholder=\\\"Click and see logs!\\\"\\n      style={{ width: \\'200px\\' }}\\n      onFocus={() => console.log(\\'onFocus\\')}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const myOptions = [{\n          value: 'Apple'\n        }, {\n          value: 'Banana'\n        }, {\n          value: 'Coconut'\n        }];\n        return <Dropdown options={myOptions} placeholder=\"Click and see logs!\" style={{\n          width: '200px'\n        }} onFocus={() => console.log('onFocus')} mdxType=\"Dropdown\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"onclosedropdown\"\n    }}>{`onCloseDropDown`}</h2>\n    <Playground __position={15} __code={'() => {\\n  const myOptions = [\\n    { value: \\'Apple\\' },\\n    { value: \\'Banana\\' },\\n    { value: \\'Coconut\\' },\\n  ]\\n  return (\\n    <Dropdown\\n      options={myOptions}\\n      placeholder=\\\"Show dropdown, then close dropdown\\\"\\n      style={{ width: \\'200px\\' }}\\n      onCloseDropDown={() => console.log(\\'onCloseDropDown\\')}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Dropdown,\n      DropdownOption,\n      Button,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const myOptions = [{\n          value: 'Apple'\n        }, {\n          value: 'Banana'\n        }, {\n          value: 'Coconut'\n        }];\n        return <Dropdown options={myOptions} placeholder=\"Show dropdown, then close dropdown\" style={{\n          width: '200px'\n        }} onCloseDropDown={() => console.log('onCloseDropDown')} mdxType=\"Dropdown\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}