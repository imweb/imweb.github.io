{"version":3,"sources":["webpack:///../components/table/Table.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Table","parentName","CollapseTable","AutoTable","TableSort","__position","__code","__scope","DataTable","AutoCollapseTable","mockData","mockCGI","Icon","Button","Playground","Props","cols","display","width","type","data","style","colSpan","colspan","undefined","canSelect","onSelectedChange","console","log","row","collapseRows","Example","sortData","bind","state","sortTableData","sortTableQuery","sort","order","render","options","key","onChange","setState","active","this","dropdownWidth","map","x","y","React","newPage","prevPage","translateRow","fetch","query","Promise","resolve","then","json","rows","total","rowData","A","B","C","D","maxRow","value","persistence","get","window","localStorage","JSON","parse","getItem","set","setItem","stringify","ref","t","autoTable","onPageChange","onClick","page","Math","floor","random","goPage","showPage","reset","errorFetch","_","reject","setTimeout","size","autoErrorTable","sub","isMDXComponent"],"mappings":"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","file":"component---components-table-table-mdx-be41c181b56e28b9dbad.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/doctor/tencent_programs/bee/imui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Table from './lib/Table';\nimport CollapseTable from './lib/CollapseTable';\nimport TableSort from './lib/TableSort';\nimport DataTable from './lib/DataTable';\nimport AutoTable from './lib/AutoTable';\nimport AutoCollapseTable from './lib/AutoCollapseTable';\nimport './style/table.scss';\nimport './style/table_sort.scss';\nimport './style/data_table.scss';\nimport './style/common.scss';\nimport './style/collapse_table.scss';\nimport './style/auto_table.scss';\nimport { mockData, mockCGI } from './demo/util';\nimport Icon from '../icon/index';\nimport Button from '../button/index';\nimport { Playground, Props } from 'docz';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"table\"\n    }}>{`Table`}</h1>\n\n    <h2 {...{\n      \"id\": \"props--methods\"\n    }}>{`Props & Methods`}</h2>\n    <h3 {...{\n      \"id\": \"table-1\"\n    }}>{`Table`}</h3>\n    <Props of={Table} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"collapsetable\"\n    }}>{`CollapseTable`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`可折叠行表格,封装自Table，具有以下功能：\n    - 可折叠部分行\n`}</code></pre>\n    <Props of={CollapseTable} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"data\"\n    }}>{`👆data`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`row`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`一维数组，当前一行需要的数据。该行会一直显示，通过点击来控制是否显示对应被控制的折叠的行是否显示 如果数组元素是 React组件实例：展示元素本身 else：展示元素toString()  如果数组元素是空字符串或者==null会显示为'-'`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`array.isRequired`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`collapseRows`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`当前这行控制的可以被折叠的行,二维数组`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`arrayOf(PropTypes.array)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`showCollapseRows`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`是否显示,当前这行控制的可以被折叠的行`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`arrayOf(PropTypes.array)`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`false`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"autotable\"\n    }}>{`AutoTable`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`数据表格组件，封装自Table,具有以下功能：\n    - 自动分页\n    - 数据缓存\n    - 选中\n    - 排序\n    - 筛选\n`}</code></pre>\n    <Props of={AutoTable} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"cols\"\n    }}>{`👆cols`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`display`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`表格头部一列名称 如果数组元素是 React组件实例：展示元素本身 else：展示元素toString()`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`array.isRequired`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`表格一列所占宽度百分比`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`colspan`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`跨列,默认为1`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`number`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`1`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`sort`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`该表头是否需要排序，如果需要排序  1.该列只有一个排序选项：请传入一个只有一个元素的`}{`[SortType]`}{`类型的Arrays  2.该列有多个排序选项:请传入一个`}{`[SortType]`}{`类型的Arrays`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`arrayOf`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"sort\"\n    }}>{`👆sort`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`display`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`表格头部一列名称 如果数组元素是 React组件实例：展示元素本身 else：展示元素toString()`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`array.isRequired`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`key`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`用于表示该排序方法的唯一key`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`string.isRequired`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`默认排序方法 1=顺序 -1=逆序 如果==null表示当前排序方法默认不启用`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`oneOf([-1, 1])`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"autocollapsetable\"\n    }}>{`AutoCollapseTable`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`可折叠行表格数据表格组件，封装自CollapseTable,具有以下功能：\n    - 可折叠部分行\n    - 自动分页\n    - 数据缓存\n    - 选中\n    - 排序\n    - 筛选\n`}</code></pre>\n    <Props of={CollapseTable} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"tablesort\"\n    }}>{`TableSort`}</h3>\n    <Props of={TableSort} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"options\"\n    }}>{`👆options`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`属性`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`说明`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`类型`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`默认值`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`display`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`用来展示`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`any.isRequired`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`value`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`用于回调`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`any.isRequired`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><inlineCode parentName=\"td\">{`undefined`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <Playground __position={5} __code={'<Table\\n  cols={[\\n    { display: \\'角色\\', width: 8 },\\n    { display: \\'描述\\', width: 40 },\\n    { display: \\'成员数\\', width: 5 },\\n    {\\n      display: (\\n        <span>\\n          操作\\n          <Icon type=\\\"question\\\" />\\n        </span>\\n      ),\\n      width: 20,\\n    },\\n  ]}\\n  data={[\\n    [\\n      \\'超级管理员\\',\\n      \\'机构创始人，拥有所有功能的权限，且可以为其他角色自由配置功能。\\',\\n      1,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'教学管理员\\',\\n      \\'机构创始人从所关联的成员中选取，协助管理机构，主要是教务教学相关工作的管理，默认拥有大部分权限。\\',\\n      62,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'老师\\',\\n      \\'主要负责给学生上课，以及准备课程教案和教学资料。\\',\\n      230,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'助教\\',\\n      \\'主要协助老师上课，工作内容包括在课堂上进行班级纪律管理，以及维护班级交流QQ群等。\\',\\n      232,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'销售管理员\\',\\n      \\'销售模块的管理人员，默认拥有查询学员、分配销售人员并查看机构与销售人员的销售相关数据的权限。\\',\\n      3,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'教务\\',\\n      \\'主要负责除了上课之外的大部分教务教学相关工作。\\',\\n      5,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'销售\\',\\n      \\'销售人员，默认拥有查询被分配课程的学员、查看自己的销售数据并进行销售记录的相关权限。\\',\\n      12,\\n      <a>管理成员</a>,\\n    ],\\n    [\\'财务\\', \\'主要负责机构营收的查询和管理。\\', 1, <a>管理成员</a>],\\n    [\\n      \\'自定义1\\',\\n      \\'自定义1\\',\\n      1,\\n      <div>\\n        <a>管理成员</a>\\n        <br />\\n        <a>编辑角色</a>\\n        <br />\\n        <a>删除</a>\\n        <br />\\n      </div>,\\n    ],\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Table cols={[{\n        display: '角色',\n        width: 8\n      }, {\n        display: '描述',\n        width: 40\n      }, {\n        display: '成员数',\n        width: 5\n      }, {\n        display: <span>操作\n                  <Icon type=\"question\" mdxType=\"Icon\" />\n                </span>,\n        width: 20\n      }]} data={[['超级管理员', '机构创始人，拥有所有功能的权限，且可以为其他角色自由配置功能。', 1, <a>管理成员</a>], ['教学管理员', '机构创始人从所关联的成员中选取，协助管理机构，主要是教务教学相关工作的管理，默认拥有大部分权限。', 62, <a>管理成员</a>], ['老师', '主要负责给学生上课，以及准备课程教案和教学资料。', 230, <a>管理成员</a>], ['助教', '主要协助老师上课，工作内容包括在课堂上进行班级纪律管理，以及维护班级交流QQ群等。', 232, <a>管理成员</a>], ['销售管理员', '销售模块的管理人员，默认拥有查询学员、分配销售人员并查看机构与销售人员的销售相关数据的权限。', 3, <a>管理成员</a>], ['教务', '主要负责除了上课之外的大部分教务教学相关工作。', 5, <a>管理成员</a>], ['销售', '销售人员，默认拥有查询被分配课程的学员、查看自己的销售数据并进行销售记录的相关权限。', 12, <a>管理成员</a>], ['财务', '主要负责机构营收的查询和管理。', 1, <a>管理成员</a>], ['自定义1', '自定义1', 1, <div>\n                <a>管理成员</a>\n                <br />\n                <a>编辑角色</a>\n                <br />\n                <a>删除</a>\n                <br />\n              </div>]]} mdxType=\"Table\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"complex-header\"\n    }}>{`Complex Header`}</h2>\n    <Playground __position={6} __code={'<Table\\n  cols={[\\n    { display: \\'角色\\', width: 8 },\\n    {\\n      display: (\\n        <table style={{ width: \\'100%\\' }}>\\n          <tbody>\\n            <tr>\\n              <td>A</td>\\n              <td>B</td>\\n            </tr>\\n            <tr>\\n              <td colSpan=\\\"2\\\">C</td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      ),\\n      width: 40,\\n    },\\n    { display: \\'成员数\\', width: 5 },\\n    { display: \\'操作\\', width: 20 },\\n  ]}\\n  data={[\\n    [\\n      \\'超级管理员\\',\\n      \\'机构创始人，拥有所有功能的权限，且可以为其他角色自由配置功能。\\',\\n      1,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'教学管理员\\',\\n      \\'机构创始人从所关联的成员中选取，协助管理机构，主要是教务教学相关工作的管理，默认拥有大部分权限。\\',\\n      62,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'老师\\',\\n      \\'主要负责给学生上课，以及准备课程教案和教学资料。\\',\\n      230,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'助教\\',\\n      \\'主要协助老师上课，工作内容包括在课堂上进行班级纪律管理，以及维护班级交流QQ群等。\\',\\n      232,\\n      <a>管理成员</a>,\\n    ],\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Table cols={[{\n        display: '角色',\n        width: 8\n      }, {\n        display: <table style={{\n          width: '100%'\n        }}>\n                <tbody>\n                <tr>\n                    <td>A</td>\n                    <td>B</td>\n                </tr>\n                <tr>\n                    <td colSpan=\"2\">C</td>\n                </tr>\n                </tbody>\n            </table>,\n        width: 40\n      }, {\n        display: '成员数',\n        width: 5\n      }, {\n        display: '操作',\n        width: 20\n      }]} data={[['超级管理员', '机构创始人，拥有所有功能的权限，且可以为其他角色自由配置功能。', 1, <a>管理成员</a>], ['教学管理员', '机构创始人从所关联的成员中选取，协助管理机构，主要是教务教学相关工作的管理，默认拥有大部分权限。', 62, <a>管理成员</a>], ['老师', '主要负责给学生上课，以及准备课程教案和教学资料。', 230, <a>管理成员</a>], ['助教', '主要协助老师上课，工作内容包括在课堂上进行班级纪律管理，以及维护班级交流QQ群等。', 232, <a>管理成员</a>]]} mdxType=\"Table\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"cross-column\"\n    }}>{`Cross Column`}</h2>\n    <Playground __position={7} __code={'<Table\\n  cols={[\\n    { display: \\'角色\\', width: 8 },\\n    { display: \\'描述\\', width: 80, colspan: 2 },\\n    { display: \\'操作\\', width: 10 },\\n  ]}\\n  data={[\\n    [\\n      \\'超级管理员\\',\\n      \\'机构创始人，拥有所有功能的权限，且可以为其他角色自由配置功能。\\',\\n      1,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'教学管理员\\',\\n      \\'机构创始人从所关联的成员中选取，协助管理机构，主要是教务教学相关工作的管理，默认拥有大部分权限。\\',\\n      62,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'老师\\',\\n      \\'主要负责给学生上课，以及准备课程教案和教学资料。\\',\\n      230,\\n      <a>管理成员</a>,\\n    ],\\n    [\\n      \\'助教\\',\\n      \\'主要协助老师上课，工作内容包括在课堂上进行班级纪律管理，以及维护班级交流QQ群等。\\',\\n      232,\\n      <a>管理成员</a>,\\n    ],\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Table cols={[{\n        display: '角色',\n        width: 8\n      }, {\n        display: '描述',\n        width: 80,\n        colspan: 2\n      }, {\n        display: '操作',\n        width: 10\n      }]} data={[['超级管理员', '机构创始人，拥有所有功能的权限，且可以为其他角色自由配置功能。', 1, <a>管理成员</a>], ['教学管理员', '机构创始人从所关联的成员中选取，协助管理机构，主要是教务教学相关工作的管理，默认拥有大部分权限。', 62, <a>管理成员</a>], ['老师', '主要负责给学生上课，以及准备课程教案和教学资料。', 230, <a>管理成员</a>], ['助教', '主要协助老师上课，工作内容包括在课堂上进行班级纪律管理，以及维护班级交流QQ群等。', 232, <a>管理成员</a>]]} mdxType=\"Table\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"null-values\"\n    }}>{`Null Values`}</h2>\n    <Playground __position={8} __code={'<Table\\n  cols={[\\n    { display: \\'角色\\', width: 8 },\\n    { display: \\'操作\\', width: 10 },\\n  ]}\\n  data={[\\n    [\\'超级管理员\\', null],\\n    [\\'教学管理员\\', undefined],\\n    [\\'老师\\', \\'\\'],\\n    [\\'助教\\', 0],\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Table cols={[{\n        display: '角色',\n        width: 8\n      }, {\n        display: '操作',\n        width: 10\n      }]} data={[['超级管理员', null], ['教学管理员', undefined], ['老师', ''], ['助教', 0]]} mdxType=\"Table\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"select-rows\"\n    }}>{`Select Rows`}</h2>\n    <Playground __position={9} __code={'<Table\\n  cols={[\\n    { display: \\'A\\', width: 45 },\\n    { display: \\'B\\', width: 50 },\\n  ]}\\n  data={mockData(2, 4)}\\n  canSelect\\n  onSelectedChange={console.log}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Table cols={[{\n        display: 'A',\n        width: 45\n      }, {\n        display: 'B',\n        width: 50\n      }]} data={mockData(2, 4)} canSelect onSelectedChange={console.log} mdxType=\"Table\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"no-data\"\n    }}>{`No Data`}</h2>\n    <Playground __position={10} __code={'<Table\\n  cols={[\\n    { display: \\'A\\', width: 50 },\\n    { display: \\'B\\', width: 50 },\\n  ]}\\n  data={[]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Table cols={[{\n        display: 'A',\n        width: 50\n      }, {\n        display: 'B',\n        width: 50\n      }]} data={[]} mdxType=\"Table\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"collapsetable-1\"\n    }}>{`CollapseTable`}</h2>\n    <Playground __position={11} __code={'<CollapseTable\\n  cols={[\\n    { display: \\'结算课程/服务\\', width: 20 },\\n    { display: \\'结算订单数\\', width: 10 },\\n    { display: \\'结算金额\\', width: 10 },\\n    { display: \\'操作\\', width: 10 },\\n  ]}\\n  data={[\\n    {\\n      row: [\\'2016-06-29结算查看明细\\', 2, \\'0.04元\\', <a>详情</a>],\\n      collapseRows: [\\n        [\\'测试角标的课程\\', 1, \\'0.02元\\', <a>查看明细</a>],\\n        [\\'雅思写作题\\', 1, \\'0.02元\\', <a>查看明细</a>],\\n      ],\\n    },\\n    {\\n      row: [\\'2016-05-29结算查看明细\\', 2, \\'3.09元\\', <a>详情</a>],\\n      collapseRows: [\\n        [\\'支付43王萌勿删\\', 1, \\'1.02元\\', <a>查看明细</a>],\\n        [\\'支付优惠卷测试啊\\', 1, \\'0.02元\\', <a>查看明细</a>],\\n        [\\'课中包退啊\\', 1, \\'2.07元\\', <a>查看明细</a>],\\n      ],\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <CollapseTable cols={[{\n        display: '结算课程/服务',\n        width: 20\n      }, {\n        display: '结算订单数',\n        width: 10\n      }, {\n        display: '结算金额',\n        width: 10\n      }, {\n        display: '操作',\n        width: 10\n      }]} data={[{\n        row: ['2016-06-29结算查看明细', 2, '0.04元', <a>详情</a>],\n        collapseRows: [['测试角标的课程', 1, '0.02元', <a>查看明细</a>], ['雅思写作题', 1, '0.02元', <a>查看明细</a>]]\n      }, {\n        row: ['2016-05-29结算查看明细', 2, '3.09元', <a>详情</a>],\n        collapseRows: [['支付43王萌勿删', 1, '1.02元', <a>查看明细</a>], ['支付优惠卷测试啊', 1, '0.02元', <a>查看明细</a>], ['课中包退啊', 1, '2.07元', <a>查看明细</a>]]\n      }]} mdxType=\"CollapseTable\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"tablesort-1\"\n    }}>{`TableSort`}</h2>\n    <Playground __position={12} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.sortData = this.sortData.bind(this)\\n      this.state = {\\n        sortTableData: [\\n          [1, 9, 5],\\n          [5, 1, 4],\\n          [4, 4, 2],\\n          [7, 8, 6],\\n          [2, 7, 9],\\n        ],\\n      }\\n      this.sortTableQuery = {\\n        sort: \\'\\',\\n        order: \\'\\',\\n      }\\n    }\\n    render() {\\n      return (\\n        <>\\n          <DataTable\\n            cols={[\\n              {\\n                display: (\\n                  <TableSort\\n                    options={[\\n                      { display: \\'A\\', key: \\'a\\' },\\n                      { display: \\'B\\', key: \\'b\\' },\\n                    ]}\\n                    onChange={sort => {\\n                      this.setState({\\n                        sortTableData: this.sortData(sort),\\n                      })\\n                    }}\\n                    active={\\n                      this.sortTableQuery.sort === \\'a\\' ||\\n                      this.sortTableQuery.sort === \\'b\\'\\n                    }\\n                    dropdownWidth={200}\\n                  />\\n                ),\\n                width: 50,\\n              },\\n              {\\n                display: (\\n                  <TableSort\\n                    options={[{ display: \\'C\\', key: \\'c\\' }]}\\n                    onChange={sort => {\\n                      this.setState({\\n                        sortTableData: this.sortData(sort),\\n                      })\\n                    }}\\n                    active={this.sortTableQuery.sort === \\'c\\'}\\n                  />\\n                ),\\n                width: 50,\\n              },\\n            ]}\\n            data={this.state.sortTableData.map(row => [\\n              `A=${row[0]} B=${row[1]}`,\\n              row[2],\\n            ])}\\n          />\\n          <p>对字段进行排序使用TableSort组件传入cols属性</p>\\n        </>\\n      )\\n    }\\n    sortData(sort) {\\n      this.sortTableQuery.sort = sort.sort\\n      let sortTableData = [...this.state.sortTableData]\\n      sortTableData.sort((x, y) => {\\n        if (sort.sort === \\'a\\') {\\n          return [x[0] - y[0]] * sort.order\\n        } else if (sort.sort === \\'b\\') {\\n          return [x[1] - y[1]] * sort.order\\n        } else if (sort.sort === \\'c\\') {\\n          return [x[2] - y[2]] * sort.order\\n        }\\n        return 0\\n      })\\n      return sortTableData\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.sortData = this.sortData.bind(this);\n            this.state = {\n              sortTableData: [[1, 9, 5], [5, 1, 4], [4, 4, 2], [7, 8, 6], [2, 7, 9]]\n            };\n            this.sortTableQuery = {\n              sort: '',\n              order: ''\n            };\n          }\n\n          render() {\n            return <>\n            <DataTable cols={[{\n                display: <TableSort options={[{\n                  display: 'A',\n                  key: 'a'\n                }, {\n                  display: 'B',\n                  key: 'b'\n                }]} onChange={sort => {\n                  this.setState({\n                    sortTableData: this.sortData(sort)\n                  });\n                }} active={this.sortTableQuery.sort === 'a' || this.sortTableQuery.sort === 'b'} dropdownWidth={200} mdxType=\"TableSort\" />,\n                width: 50\n              }, {\n                display: <TableSort options={[{\n                  display: 'C',\n                  key: 'c'\n                }]} onChange={sort => {\n                  this.setState({\n                    sortTableData: this.sortData(sort)\n                  });\n                }} active={this.sortTableQuery.sort === 'c'} mdxType=\"TableSort\" />,\n                width: 50\n              }]} data={this.state.sortTableData.map(row => [`A=${row[0]} B=${row[1]}`, row[2]])} mdxType=\"DataTable\" />\n          <p>对字段进行排序使用TableSort组件传入cols属性</p>\n            </>;\n          }\n\n          sortData(sort) {\n            this.sortTableQuery.sort = sort.sort;\n            let sortTableData = [...this.state.sortTableData];\n            sortTableData.sort((x, y) => {\n              if (sort.sort === 'a') {\n                return [x[0] - y[0]] * sort.order;\n              } else if (sort.sort === 'b') {\n                return [x[1] - y[1]] * sort.order;\n              } else if (sort.sort === 'c') {\n                return [x[2] - y[2]] * sort.order;\n              }\n\n              return 0;\n            });\n            return sortTableData;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"autotable-basic-usage\"\n    }}>{`AutoTable Basic Usage`}</h2>\n    <Playground __position={13} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        newPage: 0,\\n        prevPage: 0,\\n      }\\n      this.translateRow = this.translateRow.bind(this)\\n      this.fetch = this.fetch.bind(this)\\n    }\\n    fetch(query) {\\n      return new Promise(resolve => {\\n        mockCGI(query).then(json => {\\n          let rows = json.data\\n          let total = json.total\\n          resolve({\\n            rows,\\n            total,\\n          })\\n        })\\n      })\\n    }\\n    translateRow(rowData) {\\n      return [\\n        rowData.A,\\n        rowData.B,\\n        // owner\\n        `${rowData.C}-${rowData.D}`,\\n      ]\\n    }\\n    render() {\\n      return (\\n        <>\\n          <AutoTable\\n            maxRow={5}\\n            cols={[\\n              { display: \\'A\\', width: 10 },\\n              { sort: [{ display: \\'B\\', key: \\'B\\', value: -1 }], width: 15 },\\n              {\\n                sort: [\\n                  { display: \\'C\\', key: \\'C\\', value: 1 },\\n                  { display: \\'D\\', key: \\'D\\' },\\n                ],\\n                width: 8,\\n              },\\n            ]}\\n            fetch={this.fetch}\\n            translateRow={this.translateRow}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              newPage: 0,\n              prevPage: 0\n            };\n            this.translateRow = this.translateRow.bind(this);\n            this.fetch = this.fetch.bind(this);\n          }\n\n          fetch(query) {\n            return new Promise(resolve => {\n              mockCGI(query).then(json => {\n                let rows = json.data;\n                let total = json.total;\n                resolve({\n                  rows,\n                  total\n                });\n              });\n            });\n          }\n\n          translateRow(rowData) {\n            return [rowData.A, rowData.B, // owner\n            `${rowData.C}-${rowData.D}`];\n          }\n\n          render() {\n            return <>\n            <AutoTable maxRow={5} cols={[{\n                display: 'A',\n                width: 10\n              }, {\n                sort: [{\n                  display: 'B',\n                  key: 'B',\n                  value: -1\n                }],\n                width: 15\n              }, {\n                sort: [{\n                  display: 'C',\n                  key: 'C',\n                  value: 1\n                }, {\n                  display: 'D',\n                  key: 'D'\n                }],\n                width: 8\n              }]} fetch={this.fetch} translateRow={this.translateRow} mdxType=\"AutoTable\" />\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"autotable-persistence\"\n    }}>{`AutoTable Persistence`}</h2>\n    <Playground __position={14} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        newPage: 0,\\n        prevPage: 0,\\n      }\\n      this.translateRow = this.translateRow.bind(this)\\n      this.fetch = this.fetch.bind(this)\\n    }\\n    fetch(query) {\\n      return new Promise(resolve => {\\n        mockCGI(query).then(json => {\\n          let rows = json.data\\n          let total = json.total\\n          resolve({\\n            rows,\\n            total,\\n          })\\n        })\\n      })\\n    }\\n    translateRow(rowData) {\\n      return [\\n        rowData.A,\\n        rowData.B,\\n        // owner\\n        `${rowData.C}-${rowData.D}`,\\n      ]\\n    }\\n    render() {\\n      return (\\n        <>\\n          <AutoTable\\n            maxRow={5}\\n            cols={[\\n              { display: \\'A\\', width: 10 },\\n              { sort: [{ display: \\'B\\', key: \\'B\\', value: -1 }], width: 15 },\\n              {\\n                sort: [\\n                  { display: \\'C\\', key: \\'C\\', value: 1 },\\n                  { display: \\'D\\', key: \\'D\\' },\\n                ],\\n                width: 8,\\n              },\\n            ]}\\n            fetch={this.fetch}\\n            translateRow={this.translateRow}\\n            persistence={{\\n              get: () => {\\n                if (typeof window !== \\'undefined\\' && window.localStorage) {\\n                  return JSON.parse(\\n                    window.localStorage.getItem(\\'AutoTable-persistence\\'),\\n                  )\\n                }\\n              },\\n              set: state => {\\n                if (typeof window !== \\'undefined\\' && window.localStorage) {\\n                  localStorage.setItem(\\n                    \\'AutoTable-persistence\\',\\n                    JSON.stringify(state),\\n                  )\\n                }\\n              },\\n            }}\\n          />\\n          <p>\\n            AutoTable的state被持久化到了localStorage，先切换下页面，重新刷新页面可以看到这个AutoTable还是之前的样子\\n          </p>\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              newPage: 0,\n              prevPage: 0\n            };\n            this.translateRow = this.translateRow.bind(this);\n            this.fetch = this.fetch.bind(this);\n          }\n\n          fetch(query) {\n            return new Promise(resolve => {\n              mockCGI(query).then(json => {\n                let rows = json.data;\n                let total = json.total;\n                resolve({\n                  rows,\n                  total\n                });\n              });\n            });\n          }\n\n          translateRow(rowData) {\n            return [rowData.A, rowData.B, // owner\n            `${rowData.C}-${rowData.D}`];\n          }\n\n          render() {\n            return <>\n            <AutoTable maxRow={5} cols={[{\n                display: 'A',\n                width: 10\n              }, {\n                sort: [{\n                  display: 'B',\n                  key: 'B',\n                  value: -1\n                }],\n                width: 15\n              }, {\n                sort: [{\n                  display: 'C',\n                  key: 'C',\n                  value: 1\n                }, {\n                  display: 'D',\n                  key: 'D'\n                }],\n                width: 8\n              }]} fetch={this.fetch} translateRow={this.translateRow} persistence={{\n                get: () => {\n                  if (typeof window !== 'undefined' && window.localStorage) {\n                    return JSON.parse(window.localStorage.getItem('AutoTable-persistence'));\n                  }\n                },\n                set: state => {\n                  if (typeof window !== 'undefined' && window.localStorage) {\n                    localStorage.setItem('AutoTable-persistence', JSON.stringify(state));\n                  }\n                }\n              }} mdxType=\"AutoTable\" />\n          <p>AutoTable的state被持久化到了localStorage，先切换下页面，重新刷新页面可以看到这个AutoTable还是之前的样子</p>\n        </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"autotable-apis\"\n    }}>{`AutoTable APIs`}</h2>\n    <Playground __position={15} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        newPage: 0,\\n        prevPage: 0,\\n      }\\n      this.translateRow = this.translateRow.bind(this)\\n      this.fetch = this.fetch.bind(this)\\n    }\\n    fetch(query) {\\n      return new Promise(resolve => {\\n        mockCGI(query).then(json => {\\n          let rows = json.data\\n          let total = json.total\\n          resolve({\\n            rows,\\n            total,\\n          })\\n        })\\n      })\\n    }\\n    translateRow(rowData) {\\n      return [\\n        rowData.A,\\n        rowData.B,\\n        // owner\\n        `${rowData.C}-${rowData.D}`,\\n      ]\\n    }\\n    render() {\\n      return (\\n        <>\\n          <AutoTable\\n            ref={t => (this.autoTable = t)}\\n            maxRow={5}\\n            cols={[\\n              { display: \\'A\\', width: 10 },\\n              { sort: [{ display: \\'B\\', key: \\'B\\', value: -1 }], width: 15 },\\n              {\\n                sort: [\\n                  { display: \\'C\\', key: \\'C\\', value: 1 },\\n                  { display: \\'D\\', key: \\'D\\' },\\n                ],\\n                width: 8,\\n              },\\n            ]}\\n            fetch={this.fetch}\\n            translateRow={this.translateRow}\\n            onPageChange={this.onPageChange}\\n          />\\n          <br />\\n          <Button\\n            onClick={() => {\\n              let page = Math.floor(Math.random() * 20)\\n              this.autoTable.goPage(page, false)\\n            }}\\n          >\\n            goPage\\n          </Button>\\n          <Button\\n            onClick={() => {\\n              let page = Math.floor(Math.random() * 20)\\n              this.autoTable.showPage(page, false)\\n            }}\\n          >\\n            showPage\\n          </Button>\\n          <Button\\n            onClick={() => {\\n              this.autoTable.reset([])\\n            }}\\n          >\\n            reset\\n          </Button>\\n          <p>\\n            跳转到第page页, 如果没有第page页的数据会回调fetch去加载更多的数据,\\n            从0开始计数\\n          </p>\\n          <p>\\n            跳转到第page页, 如果没有第page页的数据 不会\\n            回调fetch去加载更多的数据, 业务侧自己保证第page页有数据\\n          </p>\\n          <p>每当表单的查询条件发生改变时请调reset方法重置AutoTable</p>\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              newPage: 0,\n              prevPage: 0\n            };\n            this.translateRow = this.translateRow.bind(this);\n            this.fetch = this.fetch.bind(this);\n          }\n\n          fetch(query) {\n            return new Promise(resolve => {\n              mockCGI(query).then(json => {\n                let rows = json.data;\n                let total = json.total;\n                resolve({\n                  rows,\n                  total\n                });\n              });\n            });\n          }\n\n          translateRow(rowData) {\n            return [rowData.A, rowData.B, // owner\n            `${rowData.C}-${rowData.D}`];\n          }\n\n          render() {\n            return <>\n            <AutoTable ref={t => this.autoTable = t} maxRow={5} cols={[{\n                display: 'A',\n                width: 10\n              }, {\n                sort: [{\n                  display: 'B',\n                  key: 'B',\n                  value: -1\n                }],\n                width: 15\n              }, {\n                sort: [{\n                  display: 'C',\n                  key: 'C',\n                  value: 1\n                }, {\n                  display: 'D',\n                  key: 'D'\n                }],\n                width: 8\n              }]} fetch={this.fetch} translateRow={this.translateRow} onPageChange={this.onPageChange} mdxType=\"AutoTable\" />\n            <br />\n            <Button onClick={() => {\n                let page = Math.floor(Math.random() * 20);\n                this.autoTable.goPage(page, false);\n              }} mdxType=\"Button\">goPage</Button>\n            <Button onClick={() => {\n                let page = Math.floor(Math.random() * 20);\n                this.autoTable.showPage(page, false);\n              }} mdxType=\"Button\">showPage</Button>\n            <Button onClick={() => {\n                this.autoTable.reset([]);\n              }} mdxType=\"Button\">reset</Button>\n            <p>跳转到第page页, 如果没有第page页的数据会回调fetch去加载更多的数据, 从0开始计数</p>\n            <p>跳转到第page页, 如果没有第page页的数据 不会 回调fetch去加载更多的数据, 业务侧自己保证第page页有数据</p>\n            <p>每当表单的查询条件发生改变时请调reset方法重置AutoTable</p>\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"autotable-error-retry\"\n    }}>{`AutoTable Error Retry`}</h2>\n    <Playground __position={16} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        newPage: 0,\\n        prevPage: 0,\\n      }\\n      this.translateRow = this.translateRow.bind(this)\\n      this.fetch = this.fetch.bind(this)\\n      this.errorFetch = this.errorFetch.bind(this)\\n    }\\n    fetch(query) {\\n      return new Promise(resolve => {\\n        mockCGI(query).then(json => {\\n          let rows = json.data\\n          let total = json.total\\n          resolve({\\n            rows,\\n            total,\\n          })\\n        })\\n      })\\n    }\\n    errorFetch() {\\n      return new Promise((_, reject) => {\\n        setTimeout(() => {\\n          reject(\\n            <div>\\n              服务器发生错误\\n              <Button\\n                size=\\\"s\\\"\\n                onClick={() => {\\n                  this.autoErrorTable.reset()\\n                }}\\n              >\\n                重试\\n              </Button>\\n            </div>,\\n          )\\n        }, 1000)\\n      })\\n    }\\n    translateRow(rowData) {\\n      return [\\n        rowData.A,\\n        rowData.B,\\n        // owner\\n        `${rowData.C}-${rowData.D}`,\\n      ]\\n    }\\n    render() {\\n      return (\\n        <>\\n          <AutoTable\\n            ref={t => (this.autoErrorTable = t)}\\n            maxRow={5}\\n            cols={[\\n              { display: \\'A\\', width: 10 },\\n              { sort: [{ display: \\'B\\', key: \\'B\\', value: -1 }], width: 15 },\\n              {\\n                sort: [\\n                  { display: \\'C\\', key: \\'C\\', value: 1 },\\n                  { display: \\'D\\', key: \\'D\\' },\\n                ],\\n                width: 8,\\n              },\\n            ]}\\n            fetch={this.errorFetch}\\n            translateRow={this.translateRow}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              newPage: 0,\n              prevPage: 0\n            };\n            this.translateRow = this.translateRow.bind(this);\n            this.fetch = this.fetch.bind(this);\n            this.errorFetch = this.errorFetch.bind(this);\n          }\n\n          fetch(query) {\n            return new Promise(resolve => {\n              mockCGI(query).then(json => {\n                let rows = json.data;\n                let total = json.total;\n                resolve({\n                  rows,\n                  total\n                });\n              });\n            });\n          }\n\n          errorFetch() {\n            return new Promise((_, reject) => {\n              setTimeout(() => {\n                reject(<div>\n                    服务器发生错误\n                    <Button size=\"s\" onClick={() => {\n                    this.autoErrorTable.reset();\n                  }} mdxType=\"Button\">重试</Button>\n                </div>);\n              }, 1000);\n            });\n          }\n\n          translateRow(rowData) {\n            return [rowData.A, rowData.B, // owner\n            `${rowData.C}-${rowData.D}`];\n          }\n\n          render() {\n            return <>\n            <AutoTable ref={t => this.autoErrorTable = t} maxRow={5} cols={[{\n                display: 'A',\n                width: 10\n              }, {\n                sort: [{\n                  display: 'B',\n                  key: 'B',\n                  value: -1\n                }],\n                width: 15\n              }, {\n                sort: [{\n                  display: 'C',\n                  key: 'C',\n                  value: 1\n                }, {\n                  display: 'D',\n                  key: 'D'\n                }],\n                width: 8\n              }]} fetch={this.errorFetch} translateRow={this.translateRow} mdxType=\"AutoTable\" />\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"autocollapsetable-1\"\n    }}>{`AutoCollapseTable`}</h2>\n    <Playground __position={17} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.fetch = this.fetch.bind(this)\\n      this.translateRow = this.translateRow.bind(this)\\n    }\\n    fetch(query) {\\n      return new Promise(resolve => {\\n        mockCGI(query).then(json => {\\n          let rows = json.data\\n          let total = json.total\\n          resolve({\\n            rows,\\n            total,\\n          })\\n        })\\n      })\\n    }\\n    translateRow(rowData) {\\n      return {\\n        row: [\\n          rowData.A,\\n          rowData.B,\\n          // owner\\n          `${rowData.C}-${rowData.D}`,\\n        ],\\n        collapseRows: rowData.sub,\\n      }\\n    }\\n    render() {\\n      return (\\n        <AutoCollapseTable\\n          maxRow={3}\\n          cols={[\\n            { display: \\'A\\', width: 10 },\\n            { sort: [{ display: \\'B\\', key: \\'B\\', value: -1 }], width: 15 },\\n            {\\n              sort: [\\n                { display: \\'C\\', key: \\'C\\', value: 1 },\\n                { display: \\'D\\', key: \\'D\\' },\\n              ],\\n              width: 8,\\n            },\\n          ]}\\n          fetch={this.fetch}\\n          translateRow={this.translateRow}\\n        />\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      CollapseTable,\n      TableSort,\n      DataTable,\n      AutoTable,\n      AutoCollapseTable,\n      mockData,\n      mockCGI,\n      Icon,\n      Button,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.fetch = this.fetch.bind(this);\n            this.translateRow = this.translateRow.bind(this);\n          }\n\n          fetch(query) {\n            return new Promise(resolve => {\n              mockCGI(query).then(json => {\n                let rows = json.data;\n                let total = json.total;\n                resolve({\n                  rows,\n                  total\n                });\n              });\n            });\n          }\n\n          translateRow(rowData) {\n            return {\n              row: [rowData.A, rowData.B, // owner\n              `${rowData.C}-${rowData.D}`],\n              collapseRows: rowData.sub\n            };\n          }\n\n          render() {\n            return <AutoCollapseTable maxRow={3} cols={[{\n              display: 'A',\n              width: 10\n            }, {\n              sort: [{\n                display: 'B',\n                key: 'B',\n                value: -1\n              }],\n              width: 15\n            }, {\n              sort: [{\n                display: 'C',\n                key: 'C',\n                value: 1\n              }, {\n                display: 'D',\n                key: 'D'\n              }],\n              width: 8\n            }]} fetch={this.fetch} translateRow={this.translateRow} mdxType=\"AutoCollapseTable\" />;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}