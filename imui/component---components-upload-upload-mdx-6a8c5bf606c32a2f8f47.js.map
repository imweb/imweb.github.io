{"version":3,"sources":["webpack:///../components/upload/Upload.mdx"],"names":["_frontmatter","name","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","of","Upload","__position","__code","__scope","RcUpload","Button","Validator","Playground","Props","Example","state","hasImg","src","render","action","onSuccess","response","file","setState","path","console","log","this","alt","width","demo1Src","React","getImgInfo","desc","href","className","target","disabled","ref","instance","uploadValidator","data-required","data-required-msg","data-patterns","onChange","checkField","undefined","msgAlign","status","beforeUpload","bind","changeStatus","s","split","push","join","isMDXComponent"],"mappings":"4yBAYO,IAAMA,EAAe,Q,8MAENC,EAKQ,UAL9B,IAAsBA,EAMhBC,EAAc,CAClBF,gBAEIG,EAAYC,IACH,SAASC,EAAT,GAGZ,yBAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,UADR,UAIA,iBAAQ,CACN,GAAM,kBADR,mBAGA,YAAC,IAAD,CAAOC,GAAIC,IAAQF,QAAQ,UAC3B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,2uBAAkvBC,SAAO,GAC1xBN,QACAH,kBACAM,WACAI,aACAC,WACAC,cACAC,eACAC,WAR0xB,gBAS1xBd,IAT0xB,EAU1xBJ,eAV0xB,GAWzxBQ,QAAQ,eACR,WAAM,IACCW,EADD,YAEH,WAAYZ,GAAO,aACjB,cAAMA,IAAN,MACKa,MAAQ,CACXC,OAAQ,EACRC,IAAK,IAJU,EAFhB,0BAUHC,OAAA,WAAS,WACP,OAAO,4BACP,YAAC,IAAD,CAAUC,OAAO,cAAcC,UAAW,SAACC,EAAUC,GACjD,EAAKC,SAAS,CACZP,OAAQ,EACRC,IAAKI,EAASG,OAEhBC,QAAQC,IAAIJ,IACXnB,QAAQ,YACT,YAAC,IAAD,CAAQA,QAAQ,UAAhB,oBAEHwB,KAAKZ,MAAMC,OAAS,mBAAKY,IAAI,QAAQC,MAAM,MAAMZ,IAAKF,MAAMe,WAAe,OArB3E,GACiBC,aA0BtB,OAAO,YAACjB,EAAD,CAASX,QAAQ,eAG5B,iBAAQ,CACN,GAAM,wBADR,wBAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,kJAAqJC,SAAO,GAC7LN,QACAH,kBACAM,WACAI,aACAC,WACAC,cACAC,eACAC,WAR6L,gBAS7Ld,IAT6L,EAU7LJ,eAV6L,GAW5LQ,QAAQ,cACX,YAAC,IAAD,CAAQgB,OAAO,cAAca,WAAY,SAAAX,GACrC,MAAO,CACLzB,KAAM,SACNqB,IAAKI,EAASG,OAEfrB,QAAQ,YAEb,iBAAQ,CACN,GAAM,qBADR,qBAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,ojBAA6jBC,SAAO,GACrmBN,QACAH,kBACAM,WACAI,aACAC,WACAC,cACAC,eACAC,WARqmB,gBASrmBd,IATqmB,EAUrmBJ,eAVqmB,GAWpmBQ,QAAQ,cACX,YAAC,IAAD,CAAQgB,OAAO,cAAca,WAAY,SAAAX,GACrC,MAAO,CACLzB,KAAM,OACNqB,IAAKI,EAASG,OAEfS,KAAM,uBACC,+BAEE,iBAAGC,KAAK,8CAA8CC,UAAU,WAAWC,OAAO,UAAlF,iBACK,uBACP,qDAAsC,uBACtC,mCAAoB,uBACpB,iDACMjC,QAAQ,YAE1B,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,0JAA6JC,SAAO,GACrMN,QACAH,kBACAM,WACAI,aACAC,WACAC,cACAC,eACAC,WARqM,gBASrMd,IATqM,EAUrMJ,eAVqM,GAWpMQ,QAAQ,cACX,YAAC,IAAD,CAAQkC,UAAQ,EAAClB,OAAO,cAAca,WAAY,SAAAX,GAC9C,MAAO,CACLzB,KAAM,KACNqB,IAAKI,EAASG,OAEfrB,QAAQ,YAEb,iBAAQ,CACN,GAAM,uBADR,uBAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,obAA6bC,SAAO,GACreN,QACAH,kBACAM,WACAI,aACAC,WACAC,cACAC,eACAC,WARqe,gBASred,IATqe,EAUreJ,eAVqe,GAWpeQ,QAAQ,cACX,YAAC,IAAD,CAAWmC,IAAK,SAAAC,GAAQ,OAAI,EAAKC,gBAAkBD,GAAUpC,QAAQ,aAC7D,YAAC,IAAD,CAAQP,KAAK,SAASuB,OAAO,cAAca,WAAY,SAAAX,GACzD,MAAO,CACLzB,KAAM,OACNqB,IAAKI,EAASG,OAEfiB,iBAAA,EAAcC,oBAAkB,WAAWC,gBAAe,GAAIC,SAAU,kBAAM,EAAKJ,gBAAgBK,gBAAWC,EAAW,WAAWC,SAAS,QAAQ5C,QAAQ,aAGpK,iBAAQ,CACN,GAAM,0BADR,2BAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,gqCAA6qCC,SAAO,GACrtCN,QACAH,kBACAM,WACAI,aACAC,WACAC,cACAC,eACAC,WARqtC,gBASrtCd,IATqtC,EAUrtCJ,eAVqtC,GAWptCQ,QAAQ,eACR,WAAM,IACCW,EADD,YAEH,WAAYZ,GAAO,aACjB,cAAMA,IAAN,MACKa,MAAQ,CACXiC,OAAQ,oBAEV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,MACpB,EAAKN,SAAW,EAAKA,SAASM,KAAd,MAChB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,MAPH,EAFhB,kCAYHD,aAAA,WACEtB,KAAKwB,aAAa,iBAbjB,EAgBHP,SAAA,SAAStB,GACPG,QAAQC,IAAI,WAAYJ,GACxBK,KAAKwB,aAAa7B,EAAK0B,SAlBtB,EAqBHG,aAAA,SAAaC,GAAG,IAEZJ,EACErB,KAAKZ,MADPiC,QAEFA,EAASA,EAAOK,MAAM,MACfC,KAAKF,GACZzB,KAAKJ,SAAS,CACZyB,OAAQA,EAAOO,KAAK,QA5BrB,EAgCHrC,OAAA,WACE,OAAO,4BACP,4BAAQS,KAAKZ,MAAMiC,QAAW,uBAC9B,YAAC,IAAD,CAAQ7B,OAAO,cAAca,WAAY,SAAAX,GACrC,MAAO,CACLzB,KAAM,cACNqB,IAAKI,EAASG,OAEfyB,aAActB,KAAKsB,aAAcL,SAAUjB,KAAKiB,SAAUzC,QAAQ,aAxCtE,GACiB4B,aA6CtB,OAAO,YAACjB,EAAD,CAASX,QAAQ,eAG5B,iBAAQ,CACN,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,mOAAwOC,SAAO,GAChRN,QACAH,kBACAM,WACAI,aACAC,WACAC,cACAC,eACAC,WARgR,gBAShRd,IATgR,EAUhRJ,eAVgR,GAW/QQ,QAAQ,cACX,YAAC,IAAD,CAAQgB,OAAO,cAAcF,IAAI,4EAA4Ee,WAAY,SAAAX,GACrH,MAAO,CACLzB,KAAM,OACNqB,IAAKI,EAASG,OAEfrB,QAAQ,kB,4MAMjBH,EAAWwD,gBAAiB","file":"component---components-upload-upload-mdx-6a8c5bf606c32a2f8f47.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/shijisun/edu/projects/imui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Upload from './index';\nimport './style/index.scss';\nimport RcUpload from '../../node_modules/rc-upload/lib/index';\nimport Button from '../button/index';\nimport Validator from '../validator/index';\nimport { Playground, Props } from 'docz';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Example = makeShortcode(\"Example\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"upload\"\n    }}>{`Upload`}</h1>\n\n    <h2 {...{\n      \"id\": \"props--methods\"\n    }}>{`Props & Methods`}</h2>\n    <Props of={Upload} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic Usage`}</h2>\n    <Playground __position={1} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        hasImg: 0,\\n        src: \\'\\',\\n      }\\n    }\\n    render() {\\n      return (\\n        <>\\n          <RcUpload\\n            action=\\\"/cgi/upload\\\"\\n            onSuccess={(response, file) => {\\n              this.setState({\\n                hasImg: 1,\\n                src: response.path,\\n              })\\n              console.log(file)\\n            }}\\n          >\\n            <Button>Click to Upload</Button>\\n          </RcUpload>\\n          {this.state.hasImg ? (\\n            <img alt=\\\"demo1\\\" width=\\\"100\\\" src={state.demo1Src} />\\n          ) : null}\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Upload,\n      RcUpload,\n      Button,\n      Validator,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              hasImg: 0,\n              src: ''\n            };\n          }\n\n          render() {\n            return <>\n            <RcUpload action=\"/cgi/upload\" onSuccess={(response, file) => {\n                this.setState({\n                  hasImg: 1,\n                  src: response.path\n                });\n                console.log(file);\n              }} mdxType=\"RcUpload\">\n                <Button mdxType=\"Button\">Click to Upload</Button>\n            </RcUpload>\n            {this.state.hasImg ? <img alt=\"demo1\" width=\"100\" src={state.demo1Src} /> : null}\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"built-in-basic-style\"\n    }}>{`Built-in Basic Style`}</h2>\n    <Playground __position={2} __code={'<Upload\\n  action=\\\"/cgi/upload\\\"\\n  getImgInfo={response => {\\n    return {\\n      name: \\'内置基础样式\\',\\n      src: response.path,\\n    }\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Upload,\n      RcUpload,\n      Button,\n      Validator,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Upload action=\"/cgi/upload\" getImgInfo={response => {\n        return {\n          name: '内置基础样式',\n          src: response.path\n        };\n      }} mdxType=\"Upload\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-descriptions\"\n    }}>{`With Descriptions`}</h2>\n    <Playground __position={3} __code={'<Upload\\n  action=\\\"/cgi/upload\\\"\\n  getImgInfo={response => {\\n    return {\\n      name: \\'描述信息\\',\\n      src: response.path,\\n    }\\n  }}\\n  desc={\\n    <div>\\n      <span>\\n        图片要求\\n        <a\\n          href=\\\"http://ke.qq.com/docs/cover-description.jpg\\\"\\n          className=\\\"nor-link\\\"\\n          target=\\\"_blank\\\"\\n        >\\n          点击查看课程封面模版规范\\n        </a>\\n      </span>\\n      <br />\\n      <span>尺寸大于 1080*608 分辨率小于 96dpi</span>\\n      <br />\\n      <span>大小小于 2M</span>\\n      <br />\\n      <span>支持 JPG/PNG/BMP 等格式图片</span>\\n    </div>\\n  }\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Upload,\n      RcUpload,\n      Button,\n      Validator,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Upload action=\"/cgi/upload\" getImgInfo={response => {\n        return {\n          name: '描述信息',\n          src: response.path\n        };\n      }} desc={<div>\n                <span>\n                  图片要求\n                  <a href=\"http://ke.qq.com/docs/cover-description.jpg\" className=\"nor-link\" target=\"_blank\">点击查看课程封面模版规范</a>\n                </span><br />\n                <span>尺寸大于 1080*608 分辨率小于 96dpi</span><br />\n                <span>大小小于 2M</span><br />\n                <span>支持 JPG/PNG/BMP 等格式图片</span>\n              </div>} mdxType=\"Upload\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"disabled\"\n    }}>{`Disabled`}</h2>\n    <Playground __position={4} __code={'<Upload\\n  disabled\\n  action=\\\"/cgi/upload\\\"\\n  getImgInfo={response => {\\n    return {\\n      name: \\'禁用\\',\\n      src: response.path,\\n    }\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Upload,\n      RcUpload,\n      Button,\n      Validator,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Upload disabled action=\"/cgi/upload\" getImgInfo={response => {\n        return {\n          name: '禁用',\n          src: response.path\n        };\n      }} mdxType=\"Upload\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"work-with-validator\"\n    }}>{`Work with Validator`}</h2>\n    <Playground __position={5} __code={'<Validator ref={instance => (this.uploadValidator = instance)}>\\n  <Upload\\n    name=\\\"upload\\\"\\n    action=\\\"/cgi/upload\\\"\\n    getImgInfo={response => {\\n      return {\\n        name: \\'默认图片\\',\\n        src: response.path,\\n      }\\n    }}\\n    data-required\\n    data-required-msg=\\\"上传图片不能为空\\\"\\n    data-patterns={[]}\\n    onChange={() => this.uploadValidator.checkField(undefined, \\'upload\\')}\\n    msgAlign=\\\"right\\\"\\n  />\\n</Validator>'} __scope={{\n      props,\n      DefaultLayout,\n      Upload,\n      RcUpload,\n      Button,\n      Validator,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Validator ref={instance => this.uploadValidator = instance} mdxType=\"Validator\">\n            <Upload name=\"upload\" action=\"/cgi/upload\" getImgInfo={response => {\n          return {\n            name: '默认图片',\n            src: response.path\n          };\n        }} data-required data-required-msg=\"上传图片不能为空\" data-patterns={[]} onChange={() => this.uploadValidator.checkField(undefined, 'upload')} msgAlign=\"right\" mdxType=\"Upload\" />\n          </Validator>\n    </Playground>\n    <h2 {...{\n      \"id\": \"onchange--beforeupload\"\n    }}>{`onChange & beforeUpload`}</h2>\n    <Playground __position={6} __code={'() => {\\n  class Example extends React.Component {\\n    constructor(props) {\\n      super(props)\\n      this.state = {\\n        status: \\'Nothing uploaded\\',\\n      }\\n      this.beforeUpload = this.beforeUpload.bind(this)\\n      this.onChange = this.onChange.bind(this)\\n      this.changeStatus = this.changeStatus.bind(this)\\n    }\\n    beforeUpload() {\\n      this.changeStatus(\\'beforeUpload\\')\\n    }\\n    onChange(file) {\\n      console.log(\\'onChange\\', file)\\n      this.changeStatus(file.status)\\n    }\\n    changeStatus(s) {\\n      let { status } = this.state\\n      status = status.split(\\'>\\')\\n      status.push(s)\\n      this.setState({\\n        status: status.join(\\'>\\'),\\n      })\\n    }\\n    render() {\\n      return (\\n        <>\\n          <p>状态： {this.state.status}</p>\\n          <br />\\n          <Upload\\n            action=\\\"/cgi/upload\\\"\\n            getImgInfo={response => {\\n              return {\\n                name: \\'onChange 事件\\',\\n                src: response.path,\\n              }\\n            }}\\n            beforeUpload={this.beforeUpload}\\n            onChange={this.onChange}\\n          />\\n        </>\\n      )\\n    }\\n  }\\n  return <Example />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Upload,\n      RcUpload,\n      Button,\n      Validator,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        class Example extends React.Component {\n          constructor(props) {\n            super(props);\n            this.state = {\n              status: 'Nothing uploaded'\n            };\n            this.beforeUpload = this.beforeUpload.bind(this);\n            this.onChange = this.onChange.bind(this);\n            this.changeStatus = this.changeStatus.bind(this);\n          }\n\n          beforeUpload() {\n            this.changeStatus('beforeUpload');\n          }\n\n          onChange(file) {\n            console.log('onChange', file);\n            this.changeStatus(file.status);\n          }\n\n          changeStatus(s) {\n            let {\n              status\n            } = this.state;\n            status = status.split('>');\n            status.push(s);\n            this.setState({\n              status: status.join('>')\n            });\n          }\n\n          render() {\n            return <>\n            <p>状态： {this.state.status}</p><br />\n            <Upload action=\"/cgi/upload\" getImgInfo={response => {\n                return {\n                  name: 'onChange 事件',\n                  src: response.path\n                };\n              }} beforeUpload={this.beforeUpload} onChange={this.onChange} mdxType=\"Upload\" />\n            </>;\n          }\n\n        }\n\n        return <Example mdxType=\"Example\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"default-image\"\n    }}>{`Default Image`}</h2>\n    <Playground __position={7} __code={'<Upload\\n  action=\\\"/cgi/upload\\\"\\n  src=\\\"//8.url.cn/edu/edu_modules/edu-ui/img/bg/logo192-3x.e89120ba.png#unsprite\\\"\\n  getImgInfo={response => {\\n    return {\\n      name: \\'默认图片\\',\\n      src: response.path,\\n    }\\n  }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Upload,\n      RcUpload,\n      Button,\n      Validator,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Upload action=\"/cgi/upload\" src=\"//8.url.cn/edu/edu_modules/edu-ui/img/bg/logo192-3x.e89120ba.png#unsprite\" getImgInfo={response => {\n        return {\n          name: '默认图片',\n          src: response.path\n        };\n      }} mdxType=\"Upload\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}